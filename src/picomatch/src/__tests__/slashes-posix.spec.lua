-- ROBLOX upstream: https://github.com/micromatch/picomatch/tree/2.3.1/test/slashes-poxix.js

return function()
	local CurrentModule = script.Parent
	local PicomatchModule = CurrentModule.Parent

	local support = require(CurrentModule.support)
	local isMatch = require(PicomatchModule).isMatch
	describe("slash handling - posix", function()
		beforeAll(function()
			return support.resetPathSep()
		end)
		afterAll(function()
			return support.resetPathSep()
		end)
		afterEach(function()
			return support.resetPathSep()
		end)

		it("should match a literal string", function()
			assert(not isMatch("a/a", "(a/b)"))
			assert(isMatch("a/b", "(a/b)"))
			assert(not isMatch("a/c", "(a/b)"))
			assert(not isMatch("b/a", "(a/b)"))
			assert(not isMatch("b/b", "(a/b)"))
			assert(not isMatch("b/c", "(a/b)"))
			assert(not isMatch("a/a", "a/b"))
			assert(isMatch("a/b", "a/b"))
			assert(not isMatch("a/c", "a/b"))
			assert(not isMatch("b/a", "a/b"))
			assert(not isMatch("b/b", "a/b"))
			assert(not isMatch("b/c", "a/b"))
		end)

		it("should match an array of literal strings", function()
			assert(not isMatch("a/a", "a/b"))
			assert(isMatch("a/b", "a/b"))
			assert(not isMatch("a/c", "a/b"))
			assert(not isMatch("b/a", "a/b"))
			assert(not isMatch("b/b", "a/b"))
			assert(isMatch("b/b", "b/b"))
			assert(not isMatch("b/c", "a/b"))
		end)

		it("should support regex logical or", function()
			assert(isMatch("a/a", "a/(a|c)"))
			assert(not isMatch("a/b", "a/(a|c)"))
			assert(isMatch("a/c", "a/(a|c)"))
			assert(isMatch("a/a", "a/(a|b|c)"))
			assert(isMatch("a/b", "a/(a|b|c)"))
			assert(isMatch("a/c", "a/(a|b|c)"))
		end)

		itFIXME("should support regex ranges", function()
			assert(not isMatch("a/a", "a/[b-c]"))
			assert(isMatch("a/b", "a/[b-c]"))
			assert(isMatch("a/c", "a/[b-c]"))
			assert(isMatch("a/a", "a/[a-z]"))
			assert(isMatch("a/b", "a/[a-z]"))
			assert(isMatch("a/c", "a/[a-z]"))
			assert(not isMatch("a/x/y", "a/[a-z]"))
			assert(isMatch("a/x", "a/[a-z]"))
		end)

		it("should support single globs (*)", function()
			assert(isMatch("a", "*"))
			assert(isMatch("b", "*"))
			assert(not isMatch("a/a", "*"))
			assert(not isMatch("a/b", "*"))
			assert(not isMatch("a/c", "*"))
			assert(not isMatch("a/x", "*"))
			assert(not isMatch("a/a/a", "*"))
			assert(not isMatch("a/a/b", "*"))
			assert(not isMatch("a/a/a/a", "*"))
			assert(not isMatch("a/a/a/a/a", "*"))
			assert(not isMatch("x/y", "*"))
			assert(not isMatch("z/z", "*"))
			assert(not isMatch("a", "*/*"))
			assert(not isMatch("b", "*/*"))
			assert(isMatch("a/a", "*/*"))
			assert(isMatch("a/b", "*/*"))
			assert(isMatch("a/c", "*/*"))
			assert(isMatch("a/x", "*/*"))
			assert(not isMatch("a/a/a", "*/*"))
			assert(not isMatch("a/a/b", "*/*"))
			assert(not isMatch("a/a/a/a", "*/*"))
			assert(not isMatch("a/a/a/a/a", "*/*"))
			assert(isMatch("x/y", "*/*"))
			assert(isMatch("z/z", "*/*"))
			assert(not isMatch("a", "*/*/*"))
			assert(not isMatch("b", "*/*/*"))
			assert(not isMatch("a/a", "*/*/*"))
			assert(not isMatch("a/b", "*/*/*"))
			assert(not isMatch("a/c", "*/*/*"))
			assert(not isMatch("a/x", "*/*/*"))
			assert(isMatch("a/a/a", "*/*/*"))
			assert(isMatch("a/a/b", "*/*/*"))
			assert(not isMatch("a/a/a/a", "*/*/*"))
			assert(not isMatch("a/a/a/a/a", "*/*/*"))
			assert(not isMatch("x/y", "*/*/*"))
			assert(not isMatch("z/z", "*/*/*"))
			assert(not isMatch("a", "*/*/*/*"))
			assert(not isMatch("b", "*/*/*/*"))
			assert(not isMatch("a/a", "*/*/*/*"))
			assert(not isMatch("a/b", "*/*/*/*"))
			assert(not isMatch("a/c", "*/*/*/*"))
			assert(not isMatch("a/x", "*/*/*/*"))
			assert(not isMatch("a/a/a", "*/*/*/*"))
			assert(not isMatch("a/a/b", "*/*/*/*"))
			assert(isMatch("a/a/a/a", "*/*/*/*"))
			assert(not isMatch("a/a/a/a/a", "*/*/*/*"))
			assert(not isMatch("x/y", "*/*/*/*"))
			assert(not isMatch("z/z", "*/*/*/*"))
			assert(not isMatch("a", "*/*/*/*/*"))
			assert(not isMatch("b", "*/*/*/*/*"))
			assert(not isMatch("a/a", "*/*/*/*/*"))
			assert(not isMatch("a/b", "*/*/*/*/*"))
			assert(not isMatch("a/c", "*/*/*/*/*"))
			assert(not isMatch("a/x", "*/*/*/*/*"))
			assert(not isMatch("a/a/a", "*/*/*/*/*"))
			assert(not isMatch("a/a/b", "*/*/*/*/*"))
			assert(not isMatch("a/a/a/a", "*/*/*/*/*"))
			assert(isMatch("a/a/a/a/a", "*/*/*/*/*"))
			assert(not isMatch("x/y", "*/*/*/*/*"))
			assert(not isMatch("z/z", "*/*/*/*/*"))
			assert(not isMatch("a", "a/*"))
			assert(not isMatch("b", "a/*"))
			assert(isMatch("a/a", "a/*"))
			assert(isMatch("a/b", "a/*"))
			assert(isMatch("a/c", "a/*"))
			assert(isMatch("a/x", "a/*"))
			assert(not isMatch("a/a/a", "a/*"))
			assert(not isMatch("a/a/b", "a/*"))
			assert(not isMatch("a/a/a/a", "a/*"))
			assert(not isMatch("a/a/a/a/a", "a/*"))
			assert(not isMatch("x/y", "a/*"))
			assert(not isMatch("z/z", "a/*"))
			assert(not isMatch("a", "a/*/*"))
			assert(not isMatch("b", "a/*/*"))
			assert(not isMatch("a/a", "a/*/*"))
			assert(not isMatch("a/b", "a/*/*"))
			assert(not isMatch("a/c", "a/*/*"))
			assert(not isMatch("a/x", "a/*/*"))
			assert(isMatch("a/a/a", "a/*/*"))
			assert(isMatch("a/a/b", "a/*/*"))
			assert(not isMatch("a/a/a/a", "a/*/*"))
			assert(not isMatch("a/a/a/a/a", "a/*/*"))
			assert(not isMatch("x/y", "a/*/*"))
			assert(not isMatch("z/z", "a/*/*"))
			assert(not isMatch("a", "a/*/*/*"))
			assert(not isMatch("b", "a/*/*/*"))
			assert(not isMatch("a/a", "a/*/*/*"))
			assert(not isMatch("a/b", "a/*/*/*"))
			assert(not isMatch("a/c", "a/*/*/*"))
			assert(not isMatch("a/x", "a/*/*/*"))
			assert(not isMatch("a/a/a", "a/*/*/*"))
			assert(not isMatch("a/a/b", "a/*/*/*"))
			assert(isMatch("a/a/a/a", "a/*/*/*"))
			assert(not isMatch("a/a/a/a/a", "a/*/*/*"))
			assert(not isMatch("x/y", "a/*/*/*"))
			assert(not isMatch("z/z", "a/*/*/*"))
			assert(not isMatch("a", "a/*/*/*/*"))
			assert(not isMatch("b", "a/*/*/*/*"))
			assert(not isMatch("a/a", "a/*/*/*/*"))
			assert(not isMatch("a/b", "a/*/*/*/*"))
			assert(not isMatch("a/c", "a/*/*/*/*"))
			assert(not isMatch("a/x", "a/*/*/*/*"))
			assert(not isMatch("a/a/a", "a/*/*/*/*"))
			assert(not isMatch("a/a/b", "a/*/*/*/*"))
			assert(not isMatch("a/a/a/a", "a/*/*/*/*"))
			assert(isMatch("a/a/a/a/a", "a/*/*/*/*"))
			assert(not isMatch("x/y", "a/*/*/*/*"))
			assert(not isMatch("z/z", "a/*/*/*/*"))
			assert(not isMatch("a", "a/*/a"))
			assert(not isMatch("b", "a/*/a"))
			assert(not isMatch("a/a", "a/*/a"))
			assert(not isMatch("a/b", "a/*/a"))
			assert(not isMatch("a/c", "a/*/a"))
			assert(not isMatch("a/x", "a/*/a"))
			assert(isMatch("a/a/a", "a/*/a"))
			assert(not isMatch("a/a/b", "a/*/a"))
			assert(not isMatch("a/a/a/a", "a/*/a"))
			assert(not isMatch("a/a/a/a/a", "a/*/a"))
			assert(not isMatch("x/y", "a/*/a"))
			assert(not isMatch("z/z", "a/*/a"))
			assert(not isMatch("a", "a/*/b"))
			assert(not isMatch("b", "a/*/b"))
			assert(not isMatch("a/a", "a/*/b"))
			assert(not isMatch("a/b", "a/*/b"))
			assert(not isMatch("a/c", "a/*/b"))
			assert(not isMatch("a/x", "a/*/b"))
			assert(not isMatch("a/a/a", "a/*/b"))
			assert(isMatch("a/a/b", "a/*/b"))
			assert(not isMatch("a/a/a/a", "a/*/b"))
			assert(not isMatch("a/a/a/a/a", "a/*/b"))
			assert(not isMatch("x/y", "a/*/b"))
			assert(not isMatch("z/z", "a/*/b"))
		end)

		it("should support globstars (**)", function()
			assert(isMatch("a", "a"))
			assert(not isMatch("a/", "a"))
			assert(not isMatch("a/a", "a"))
			assert(not isMatch("a/b", "a"))
			assert(not isMatch("a/c", "a"))
			assert(not isMatch("a/x", "a"))
			assert(not isMatch("a/x/y", "a"))
			assert(not isMatch("a/x/y/z", "a"))
			assert(isMatch("a", "*"))
			assert(isMatch("a/", "*", { relaxSlashes = true }))
			assert(isMatch("a/", "*{,/}"))
			assert(not isMatch("a/a", "*"))
			assert(not isMatch("a/b", "*"))
			assert(not isMatch("a/c", "*"))
			assert(not isMatch("a/x", "*"))
			assert(not isMatch("a/x/y", "*"))
			assert(not isMatch("a/x/y/z", "*"))
			assert(not isMatch("a", "*/"))
			assert(isMatch("a/", "*/"))
			assert(not isMatch("a/a", "*/"))
			assert(not isMatch("a/b", "*/"))
			assert(not isMatch("a/c", "*/"))
			assert(not isMatch("a/x", "*/"))
			assert(not isMatch("a/x/y", "*/"))
			assert(not isMatch("a/x/y/z", "*/"))
			assert(not isMatch("a", "*/*"))
			assert(not isMatch("a/", "*/*"))
			assert(isMatch("a/a", "*/*"))
			assert(isMatch("a/b", "*/*"))
			assert(isMatch("a/c", "*/*"))
			assert(isMatch("a/x", "*/*"))
			assert(not isMatch("a/x/y", "*/*"))
			assert(not isMatch("a/x/y/z", "*/*"))
			assert(isMatch("a", "**"))
			assert(isMatch("a/", "**"))
			assert(isMatch("a/a", "**"))
			assert(isMatch("a/b", "**"))
			assert(isMatch("a/c", "**"))
			assert(isMatch("a/x", "**"))
			assert(isMatch("a/x/y", "**"))
			assert(isMatch("a/x/y/z", "**"))
			assert(not isMatch("a/", "**/a"))
			assert(not isMatch("a/b", "**/a"))
			assert(not isMatch("a/c", "**/a"))
			assert(not isMatch("a/x", "**/a"))
			assert(not isMatch("a/x/y/z", "**/a"))
			assert(isMatch("a/x/y/z/a", "**/a"))
			assert(isMatch("a", "**/a"))
			assert(isMatch("a/a", "**/a"))
			assert(not isMatch("a", "a/*"))
			assert(not isMatch("a/", "a/*"))
			assert(isMatch("a/a", "a/*"))
			assert(isMatch("a/b", "a/*"))
			assert(isMatch("a/c", "a/*"))
			assert(isMatch("a/x", "a/*"))
			assert(not isMatch("a/x/y", "a/*"))
			assert(not isMatch("a/x/y/z", "a/*"))
			assert(isMatch("a", "a/**"))
			assert(isMatch("a/", "a/**"))
			assert(isMatch("a/a", "a/**"))
			assert(isMatch("a/b", "a/**"))
			assert(isMatch("a/c", "a/**"))
			assert(isMatch("a/x", "a/**"))
			assert(isMatch("a/x/y", "a/**"))
			assert(isMatch("a/x/y/z", "a/**"))
			assert(not isMatch("a", "a/**/*"))
			assert(not isMatch("a/", "a/**/*"))
			assert(isMatch("a/a", "a/**/*"))
			assert(isMatch("a/b", "a/**/*"))
			assert(isMatch("a/c", "a/**/*"))
			assert(isMatch("a/x", "a/**/*"))
			assert(isMatch("a/x/y", "a/**/*"))
			assert(isMatch("a/x/y/z", "a/**/*"))
			assert(not isMatch("a", "a/**/**/*"))
			assert(not isMatch("a/", "a/**/**/*"))
			assert(isMatch("a/a", "a/**/**/*"))
			assert(isMatch("a/b", "a/**/**/*"))
			assert(isMatch("a/c", "a/**/**/*"))
			assert(isMatch("a/x", "a/**/**/*"))
			assert(isMatch("a/x/y", "a/**/**/*"))
			assert(isMatch("a/x/y/z", "a/**/**/*"))
			assert(isMatch("a/b/foo/bar/baz.qux", "a/b/**/bar/**/*.*"))
			assert(isMatch("a/b/bar/baz.qux", "a/b/**/bar/**/*.*"))
		end)

		it("should support negation patterns", function()
			assert(isMatch("a/a", "!a/b"))
			assert(not isMatch("a/b", "!a/b"))
			assert(isMatch("a/c", "!a/b"))
			assert(isMatch("b/a", "!a/b"))
			assert(isMatch("b/b", "!a/b"))
			assert(isMatch("b/c", "!a/b"))
			assert(isMatch("a/a", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("a/b", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("a/c", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("b/a", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("b/b", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("b/c", { "*/*", "!a/b", "!*/c" }))
			assert(isMatch("a/a", { "!a/b", "!*/c" }))
			assert(isMatch("a/b", { "!a/b", "!*/c" }))
			assert(isMatch("a/c", { "!a/b", "!*/c" }))
			assert(isMatch("b/a", { "!a/b", "!*/c" }))
			assert(isMatch("b/b", { "!a/b", "!*/c" }))
			assert(isMatch("b/c", { "!a/b", "!*/c" }))
			assert(isMatch("a/a", { "!a/b", "!a/c" }))
			assert(isMatch("a/b", { "!a/b", "!a/c" }))
			assert(isMatch("a/c", { "!a/b", "!a/c" }))
			assert(isMatch("b/a", { "!a/b", "!a/c" }))
			assert(isMatch("b/b", { "!a/b", "!a/c" }))
			assert(isMatch("b/c", { "!a/b", "!a/c" }))
			assert(isMatch("a/a", "!a/(b)"))
			assert(not isMatch("a/b", "!a/(b)"))
			assert(isMatch("a/c", "!a/(b)"))
			assert(isMatch("b/a", "!a/(b)"))
			assert(isMatch("b/b", "!a/(b)"))
			assert(isMatch("b/c", "!a/(b)"))
			assert(isMatch("a/a", "!(a/b)"))
			assert(not isMatch("a/b", "!(a/b)"))
			assert(isMatch("a/c", "!(a/b)"))
			assert(isMatch("b/a", "!(a/b)"))
			assert(isMatch("b/b", "!(a/b)"))
			assert(isMatch("b/c", "!(a/b)"))
		end)

		it("should work with file extensions", function()
			assert(not isMatch("a.txt", "a/**/*.txt"))
			assert(isMatch("a/b.txt", "a/**/*.txt"))
			assert(isMatch("a/x/y.txt", "a/**/*.txt"))
			assert(not isMatch("a/x/y/z", { "a/**/*.txt" }))
			assert(not isMatch("a.txt", "a/*.txt"))
			assert(isMatch("a/b.txt", "a/*.txt"))
			assert(not isMatch("a/x/y.txt", "a/*.txt"))
			assert(not isMatch("a/x/y/z", "a/*.txt"))
			assert(isMatch("a.txt", "a*.txt"))
			assert(not isMatch("a/b.txt", "a*.txt"))
			assert(not isMatch("a/x/y.txt", "a*.txt"))
			assert(not isMatch("a/x/y/z", "a*.txt"))
			assert(isMatch("a.txt", "*.txt"))
			assert(not isMatch("a/b.txt", "*.txt"))
			assert(not isMatch("a/x/y.txt", "*.txt"))
			assert(not isMatch("a/x/y/z", "*.txt"))
		end)

		it("should match one directory level with a single star (*)", function()
			assert(not isMatch("/a", "*/"))
			assert(not isMatch("/a", "*/*/*"))
			assert(not isMatch("/a", "*/*/*/*"))
			assert(not isMatch("/a", "*/*/*/*/*"))
			assert(not isMatch("/a", "/*/"))
			assert(not isMatch("/a", "a/*"))
			assert(not isMatch("/a", "a/*/*"))
			assert(not isMatch("/a", "a/*/*/*"))
			assert(not isMatch("/a", "a/*/*/*/*"))
			assert(not isMatch("/a", "a/*/a"))
			assert(not isMatch("/a", "a/*/b"))
			assert(not isMatch("/a/", "*"))
			assert(not isMatch("/a/", "**/*", { strictSlashes = true }))
			assert(not isMatch("/a/", "*/"))
			assert(not isMatch("/a/", "*/*", { strictSlashes = true }))
			assert(not isMatch("/a/", "*/*/*"))
			assert(not isMatch("/a/", "*/*/*/*"))
			assert(not isMatch("/a/", "*/*/*/*/*"))
			assert(not isMatch("/a/", "/*", { strictSlashes = true }))
			assert(not isMatch("/a/", "a/*"))
			assert(not isMatch("/a/", "a/*/*"))
			assert(not isMatch("/a/", "a/*/*/*"))
			assert(not isMatch("/a/", "a/*/*/*/*"))
			assert(not isMatch("/a/", "a/*/a"))
			assert(not isMatch("/a/", "a/*/b"))
			assert(not isMatch("/ab", "*"))
			assert(not isMatch("/abc", "*"))
			assert(not isMatch("/b", "*"))
			assert(not isMatch("/b", "*/"))
			assert(not isMatch("/b", "*/*/*"))
			assert(not isMatch("/b", "*/*/*/*"))
			assert(not isMatch("/b", "*/*/*/*/*"))
			assert(not isMatch("/b", "/*/"))
			assert(not isMatch("/b", "a/*"))
			assert(not isMatch("/b", "a/*/*"))
			assert(not isMatch("/b", "a/*/*/*"))
			assert(not isMatch("/b", "a/*/*/*/*"))
			assert(not isMatch("/b", "a/*/a"))
			assert(not isMatch("/b", "a/*/b"))
			assert(not isMatch("a", "*/"))
			assert(not isMatch("a", "*/*"))
			assert(not isMatch("a", "*/*/*"))
			assert(not isMatch("a", "*/*/*/*"))
			assert(not isMatch("a", "*/*/*/*/*"))
			assert(not isMatch("a", "/*"))
			assert(not isMatch("a", "/*/"))
			assert(not isMatch("a", "a/*"))
			assert(not isMatch("a", "a/*/*"))
			assert(not isMatch("a", "a/*/*/*"))
			assert(not isMatch("a", "a/*/*/*/*"))
			assert(not isMatch("a", "a/*/a"))
			assert(not isMatch("a", "a/*/b"))
			assert(not isMatch("a/", "*", { strictSlashes = true }))
			assert(not isMatch("a/", "**/*", { strictSlashes = true }))
			assert(not isMatch("a/", "*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "*/*/*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "*/*/*/*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "/*", { strictSlashes = true }))
			assert(not isMatch("a/", "/*/", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*/*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*/*/*/*", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*/a", { strictSlashes = true }))
			assert(not isMatch("a/", "a/*/b", { strictSlashes = true }))
			assert(not isMatch("a/a", "*"))
			assert(not isMatch("a/a", "*/"))
			assert(not isMatch("a/a", "*/*/*"))
			assert(not isMatch("a/a", "*/*/*/*"))
			assert(not isMatch("a/a", "*/*/*/*/*"))
			assert(not isMatch("a/a", "/*"))
			assert(not isMatch("a/a", "/*/"))
			assert(not isMatch("a/a", "a/*/*"))
			assert(not isMatch("a/a", "a/*/*/*"))
			assert(not isMatch("a/a", "a/*/*/*/*"))
			assert(not isMatch("a/a", "a/*/a"))
			assert(not isMatch("a/a", "a/*/b"))
			assert(not isMatch("a/a/a", "*"))
			assert(not isMatch("a/a/a", "*/"))
			assert(not isMatch("a/a/a", "*/*"))
			assert(not isMatch("a/a/a", "*/*/*/*"))
			assert(not isMatch("a/a/a", "*/*/*/*/*"))
			assert(not isMatch("a/a/a", "/*"))
			assert(not isMatch("a/a/a", "/*/"))
			assert(not isMatch("a/a/a", "a/*"))
			assert(not isMatch("a/a/a", "a/*/*/*"))
			assert(not isMatch("a/a/a", "a/*/*/*/*"))
			assert(not isMatch("a/a/a", "a/*/b"))
			assert(not isMatch("a/a/a/a", "*"))
			assert(not isMatch("a/a/a/a", "*/"))
			assert(not isMatch("a/a/a/a", "*/*"))
			assert(not isMatch("a/a/a/a", "*/*/*"))
			assert(not isMatch("a/a/a/a", "*/*/*/*/*"))
			assert(not isMatch("a/a/a/a", "/*"))
			assert(not isMatch("a/a/a/a", "/*/"))
			assert(not isMatch("a/a/a/a", "a/*"))
			assert(not isMatch("a/a/a/a", "a/*/*"))
			assert(not isMatch("a/a/a/a", "a/*/*/*/*"))
			assert(not isMatch("a/a/a/a", "a/*/a"))
			assert(not isMatch("a/a/a/a", "a/*/b"))
			assert(not isMatch("a/a/a/a/a", "*"))
			assert(not isMatch("a/a/a/a/a", "*/"))
			assert(not isMatch("a/a/a/a/a", "*/*"))
			assert(not isMatch("a/a/a/a/a", "*/*/*"))
			assert(not isMatch("a/a/a/a/a", "*/*/*/*"))
			assert(not isMatch("a/a/a/a/a", "/*"))
			assert(not isMatch("a/a/a/a/a", "/*/"))
			assert(not isMatch("a/a/a/a/a", "a/*"))
			assert(not isMatch("a/a/a/a/a", "a/*/*"))
			assert(not isMatch("a/a/a/a/a", "a/*/*/*"))
			assert(not isMatch("a/a/a/a/a", "a/*/a"))
			assert(not isMatch("a/a/a/a/a", "a/*/b"))
			assert(not isMatch("a/a/b", "*"))
			assert(not isMatch("a/a/b", "*/"))
			assert(not isMatch("a/a/b", "*/*"))
			assert(not isMatch("a/a/b", "*/*/*/*"))
			assert(not isMatch("a/a/b", "*/*/*/*/*"))
			assert(not isMatch("a/a/b", "/*"))
			assert(not isMatch("a/a/b", "/*/"))
			assert(not isMatch("a/a/b", "a/*"))
			assert(not isMatch("a/a/b", "a/*/*/*"))
			assert(not isMatch("a/a/b", "a/*/*/*/*"))
			assert(not isMatch("a/a/b", "a/*/a"))
			assert(not isMatch("a/b", "*"))
			assert(not isMatch("a/b", "*/"))
			assert(not isMatch("a/b", "*/*/*/*"))
			assert(not isMatch("a/b", "*/*/*/*/*"))
			assert(not isMatch("a/b", "/*"))
			assert(not isMatch("a/b", "/*/"))
			assert(not isMatch("a/b", "a/*/*"))
			assert(not isMatch("a/b", "a/*/*/*"))
			assert(not isMatch("a/b", "a/*/*/*/*"))
			assert(not isMatch("a/b", "a/*/a"))
			assert(not isMatch("a/b", "a/*/b"))
			assert(not isMatch("a/c", "*"))
			assert(not isMatch("a/c", "*/"))
			assert(not isMatch("a/c", "*/*/*/*"))
			assert(not isMatch("a/c", "*/*/*/*/*"))
			assert(not isMatch("a/c", "/*"))
			assert(not isMatch("a/c", "/*/"))
			assert(not isMatch("a/c", "a/*/*"))
			assert(not isMatch("a/c", "a/*/*/*"))
			assert(not isMatch("a/c", "a/*/*/*/*"))
			assert(not isMatch("a/c", "a/*/a"))
			assert(not isMatch("a/c", "a/*/b"))
			assert(not isMatch("a/x", "*"))
			assert(not isMatch("a/x", "*/"))
			assert(not isMatch("a/x", "*/*/*/*"))
			assert(not isMatch("a/x", "*/*/*/*/*"))
			assert(not isMatch("a/x", "/*"))
			assert(not isMatch("a/x", "/*/"))
			assert(not isMatch("a/x", "a/*/*"))
			assert(not isMatch("a/x", "a/*/*/*"))
			assert(not isMatch("a/x", "a/*/*/*/*"))
			assert(not isMatch("a/x", "a/*/a"))
			assert(not isMatch("a/x", "a/*/b"))
			assert(not isMatch("b", "*/"))
			assert(not isMatch("b", "*/*"))
			assert(not isMatch("b", "*/*/*/*"))
			assert(not isMatch("b", "*/*/*/*/*"))
			assert(not isMatch("b", "/*"))
			assert(not isMatch("b", "/*/"))
			assert(not isMatch("b", "a/*"))
			assert(not isMatch("b", "a/*/*"))
			assert(not isMatch("b", "a/*/*/*"))
			assert(not isMatch("b", "a/*/*/*/*"))
			assert(not isMatch("b", "a/*/a"))
			assert(not isMatch("b", "a/*/b"))
			assert(not isMatch("x/y", "*"))
			assert(not isMatch("x/y", "*/"))
			assert(not isMatch("x/y", "*/*/*"))
			assert(not isMatch("x/y", "*/*/*/*"))
			assert(not isMatch("x/y", "*/*/*/*/*"))
			assert(not isMatch("x/y", "/*"))
			assert(not isMatch("x/y", "/*/"))
			assert(not isMatch("x/y", "a/*"))
			assert(not isMatch("x/y", "a/*/*"))
			assert(not isMatch("x/y", "a/*/*/*"))
			assert(not isMatch("x/y", "a/*/*/*/*"))
			assert(not isMatch("x/y", "a/*/a"))
			assert(not isMatch("x/y", "a/*/b"))
			assert(not isMatch("z/z", "*"))
			assert(not isMatch("z/z", "*/"))
			assert(not isMatch("z/z", "*/*/*/*"))
			assert(not isMatch("z/z", "*/*/*/*/*"))
			assert(not isMatch("z/z", "/*"))
			assert(not isMatch("z/z", "/*/"))
			assert(not isMatch("z/z", "a/*"))
			assert(not isMatch("z/z", "a/*/*"))
			assert(not isMatch("z/z", "a/*/*/*"))
			assert(not isMatch("z/z", "a/*/*/*/*"))
			assert(not isMatch("z/z", "a/*/a"))
			assert(not isMatch("z/z", "a/*/b"))
			assert(isMatch("/a", "**/*"))
			assert(isMatch("/a", "*/*"))
			assert(isMatch("/a", "/*"))
			assert(isMatch("/a/", "**/*{,/}"))
			assert(isMatch("/a/", "*/*"))
			assert(isMatch("/a/", "*/*{,/}"))
			assert(isMatch("/a/", "/*"))
			assert(isMatch("/a/", "/*/"))
			assert(isMatch("/a/", "/*{,/}"))
			assert(isMatch("/b", "**/*"))
			assert(isMatch("/b", "*/*"))
			assert(isMatch("/b", "/*"))
			assert(isMatch("a", "*"))
			assert(isMatch("a", "**/*"))
			assert(isMatch("a/", "**/*{,/}"))
			assert(isMatch("a/", "*/"))
			assert(isMatch("a/", "*{,/}"))
			assert(isMatch("a/a", "**/*"))
			assert(isMatch("a/a", "*/*"))
			assert(isMatch("a/a", "a/*"))
			assert(isMatch("a/a/a", "**/*"))
			assert(isMatch("a/a/a", "*/*/*"))
			assert(isMatch("a/a/a", "a/*/*"))
			assert(isMatch("a/a/a", "a/*/a"))
			assert(isMatch("a/a/a/a", "**/*"))
			assert(isMatch("a/a/a/a", "*/*/*/*"))
			assert(isMatch("a/a/a/a", "a/*/*/*"))
			assert(isMatch("a/a/a/a/a", "**/*"))
			assert(isMatch("a/a/a/a/a", "*/*/*/*/*"))
			assert(isMatch("a/a/a/a/a", "a/*/*/*/*"))
			assert(isMatch("a/a/b", "**/*"))
			assert(isMatch("a/a/b", "a/*/*"))
			assert(isMatch("a/a/b", "a/*/b"))
			assert(isMatch("a/b", "**/*"))
			assert(isMatch("a/b", "*/*"))
			assert(isMatch("a/b", "a/*"))
			assert(isMatch("a/c", "**/*"))
			assert(isMatch("a/c", "*/*"))
			assert(isMatch("a/c", "a/*"))
			assert(isMatch("a/x", "**/*"))
			assert(isMatch("a/x", "*/*"))
			assert(isMatch("a/x", "a/*"))
			assert(isMatch("b", "*"))
			assert(isMatch("b", "**/*"))
			assert(isMatch("x/y", "**/*"))
			assert(isMatch("x/y", "*/*"))
			assert(isMatch("z/z", "**/*"))
			assert(isMatch("z/z", "*/*"))
		end)

		it("should match one or more directories with a globstar", function()
			assert(not isMatch("a/", "**/a"))
			assert(not isMatch("/a/", "**/a"))
			assert(not isMatch("a/a/", "**/a"))
			assert(not isMatch("/a/a/", "**/a"))
			assert(not isMatch("a/a/a/", "**/a"))
			assert(isMatch("a", "**/a"))
			assert(isMatch("a/a", "**/a"))
			assert(isMatch("a/a/a", "**/a"))
			assert(isMatch("/a", "**/a"))
			assert(isMatch("a/a/", "**/a/*{,/}"))
			assert(not isMatch("a/a/", "**/a/*", { strictSlashes = true }))
			assert(isMatch("/a/a", "**/a"))
			assert(isMatch("a", "a/**"))
			assert(not isMatch("/a", "a/**"))
			assert(not isMatch("/a/", "a/**"))
			assert(not isMatch("/a/a", "a/**"))
			assert(not isMatch("/a/a/", "a/**"))
			assert(isMatch("/a", "/a/**"))
			assert(isMatch("/a/", "/a/**"))
			assert(isMatch("/a/a", "/a/**"))
			assert(isMatch("/a/a/", "/a/**"))
			assert(isMatch("a/", "a/**"))
			assert(isMatch("a/a", "a/**"))
			assert(isMatch("a/a/", "a/**"))
			assert(isMatch("a/a/a", "a/**"))
			assert(isMatch("a/a/a/", "a/**"))
			assert(isMatch("a", "**/a/**"))
			assert(isMatch("/a", "**/a/**"))
			assert(isMatch("/a/", "**/a/**"))
			assert(isMatch("/a/a", "**/a/**"))
			assert(isMatch("/a/a/", "**/a/**"))
			assert(isMatch("a/", "**/a/**"))
			assert(isMatch("a/a", "**/a/**"))
			assert(isMatch("a/a/", "**/a/**"))
			assert(isMatch("a/a/a", "**/a/**"))
			assert(isMatch("a/a/a/", "**/a/**"))
		end)

		it("should match one or more characters", function()
			assert(isMatch("a", "*"))
			assert(isMatch("aa", "*"))
			assert(isMatch("aaa", "*"))
			assert(isMatch("aaaa", "*"))
			assert(isMatch("ab", "*"))
			assert(isMatch("b", "*"))
			assert(isMatch("bb", "*"))
			assert(isMatch("c", "*"))
			assert(isMatch("cc", "*"))
			assert(isMatch("cac", "*"))
			assert(not isMatch("a/a", "*"))
			assert(not isMatch("a/b", "*"))
			assert(not isMatch("a/c", "*"))
			assert(not isMatch("a/x", "*"))
			assert(not isMatch("a/a/a", "*"))
			assert(not isMatch("a/a/b", "*"))
			assert(not isMatch("a/a/a/a", "*"))
			assert(not isMatch("a/a/a/a/a", "*"))
			assert(not isMatch("x/y", "*"))
			assert(not isMatch("z/z", "*"))
			assert(isMatch("a", "a*"))
			assert(isMatch("aa", "a*"))
			assert(isMatch("aaa", "a*"))
			assert(isMatch("aaaa", "a*"))
			assert(isMatch("ab", "a*"))
			assert(not isMatch("b", "a*"))
			assert(not isMatch("bb", "a*"))
			assert(not isMatch("c", "a*"))
			assert(not isMatch("cc", "a*"))
			assert(not isMatch("cac", "a*"))
			assert(not isMatch("a/a", "a*"))
			assert(not isMatch("a/b", "a*"))
			assert(not isMatch("a/c", "a*"))
			assert(not isMatch("a/x", "a*"))
			assert(not isMatch("a/a/a", "a*"))
			assert(not isMatch("a/a/b", "a*"))
			assert(not isMatch("a/a/a/a", "a*"))
			assert(not isMatch("a/a/a/a/a", "a*"))
			assert(not isMatch("x/y", "a*"))
			assert(not isMatch("z/z", "a*"))
			assert(not isMatch("a", "*b"))
			assert(not isMatch("aa", "*b"))
			assert(not isMatch("aaa", "*b"))
			assert(not isMatch("aaaa", "*b"))
			assert(isMatch("ab", "*b"))
			assert(isMatch("b", "*b"))
			assert(isMatch("bb", "*b"))
			assert(not isMatch("c", "*b"))
			assert(not isMatch("cc", "*b"))
			assert(not isMatch("cac", "*b"))
			assert(not isMatch("a/a", "*b"))
			assert(not isMatch("a/b", "*b"))
			assert(not isMatch("a/c", "*b"))
			assert(not isMatch("a/x", "*b"))
			assert(not isMatch("a/a/a", "*b"))
			assert(not isMatch("a/a/b", "*b"))
			assert(not isMatch("a/a/a/a", "*b"))
			assert(not isMatch("a/a/a/a/a", "*b"))
			assert(not isMatch("x/y", "*b"))
			assert(not isMatch("z/z", "*b"))
		end)

		it("should match one or zero characters", function()
			assert(isMatch("a", "*"))
			assert(isMatch("aa", "*"))
			assert(isMatch("aaa", "*"))
			assert(isMatch("aaaa", "*"))
			assert(isMatch("ab", "*"))
			assert(isMatch("b", "*"))
			assert(isMatch("bb", "*"))
			assert(isMatch("c", "*"))
			assert(isMatch("cc", "*"))
			assert(isMatch("cac", "*"))
			assert(not isMatch("a/a", "*"))
			assert(not isMatch("a/b", "*"))
			assert(not isMatch("a/c", "*"))
			assert(not isMatch("a/x", "*"))
			assert(not isMatch("a/a/a", "*"))
			assert(not isMatch("a/a/b", "*"))
			assert(not isMatch("a/a/a/a", "*"))
			assert(not isMatch("a/a/a/a/a", "*"))
			assert(not isMatch("x/y", "*"))
			assert(not isMatch("z/z", "*"))
			assert(isMatch("a", "*a*"))
			assert(isMatch("aa", "*a*"))
			assert(isMatch("aaa", "*a*"))
			assert(isMatch("aaaa", "*a*"))
			assert(isMatch("ab", "*a*"))
			assert(not isMatch("b", "*a*"))
			assert(not isMatch("bb", "*a*"))
			assert(not isMatch("c", "*a*"))
			assert(not isMatch("cc", "*a*"))
			assert(isMatch("cac", "*a*"))
			assert(not isMatch("a/a", "*a*"))
			assert(not isMatch("a/b", "*a*"))
			assert(not isMatch("a/c", "*a*"))
			assert(not isMatch("a/x", "*a*"))
			assert(not isMatch("a/a/a", "*a*"))
			assert(not isMatch("a/a/b", "*a*"))
			assert(not isMatch("a/a/a/a", "*a*"))
			assert(not isMatch("a/a/a/a/a", "*a*"))
			assert(not isMatch("x/y", "*a*"))
			assert(not isMatch("z/z", "*a*"))
			assert(not isMatch("a", "*b*"))
			assert(not isMatch("aa", "*b*"))
			assert(not isMatch("aaa", "*b*"))
			assert(not isMatch("aaaa", "*b*"))
			assert(isMatch("ab", "*b*"))
			assert(isMatch("b", "*b*"))
			assert(isMatch("bb", "*b*"))
			assert(not isMatch("c", "*b*"))
			assert(not isMatch("cc", "*b*"))
			assert(not isMatch("cac", "*b*"))
			assert(not isMatch("a/a", "*b*"))
			assert(not isMatch("a/b", "*b*"))
			assert(not isMatch("a/c", "*b*"))
			assert(not isMatch("a/x", "*b*"))
			assert(not isMatch("a/a/a", "*b*"))
			assert(not isMatch("a/a/b", "*b*"))
			assert(not isMatch("a/a/a/a", "*b*"))
			assert(not isMatch("a/a/a/a/a", "*b*"))
			assert(not isMatch("x/y", "*b*"))
			assert(not isMatch("z/z", "*b*"))
			assert(not isMatch("a", "*c*"))
			assert(not isMatch("aa", "*c*"))
			assert(not isMatch("aaa", "*c*"))
			assert(not isMatch("aaaa", "*c*"))
			assert(not isMatch("ab", "*c*"))
			assert(not isMatch("b", "*c*"))
			assert(not isMatch("bb", "*c*"))
			assert(isMatch("c", "*c*"))
			assert(isMatch("cc", "*c*"))
			assert(isMatch("cac", "*c*"))
			assert(not isMatch("a/a", "*c*"))
			assert(not isMatch("a/b", "*c*"))
			assert(not isMatch("a/c", "*c*"))
			assert(not isMatch("a/x", "*c*"))
			assert(not isMatch("a/a/a", "*c*"))
			assert(not isMatch("a/a/b", "*c*"))
			assert(not isMatch("a/a/a/a", "*c*"))
			assert(not isMatch("a/a/a/a/a", "*c*"))
			assert(not isMatch("x/y", "*c*"))
			assert(not isMatch("z/z", "*c*"))
		end)

		it("should respect trailing slashes on paterns", function()
			assert(not isMatch("a", "*/"))
			assert(isMatch("a/", "*/"))
			assert(not isMatch("b", "*/"))
			assert(isMatch("b/", "*/"))
			assert(not isMatch("a/a", "*/"))
			assert(not isMatch("a/a/", "*/"))
			assert(not isMatch("a/b", "*/"))
			assert(not isMatch("a/b/", "*/"))
			assert(not isMatch("a/c", "*/"))
			assert(not isMatch("a/c/", "*/"))
			assert(not isMatch("a/x", "*/"))
			assert(not isMatch("a/x/", "*/"))
			assert(not isMatch("a/a/a", "*/"))
			assert(not isMatch("a/a/b", "*/"))
			assert(not isMatch("a/a/b/", "*/"))
			assert(not isMatch("a/a/a/", "*/"))
			assert(not isMatch("a/a/a/a", "*/"))
			assert(not isMatch("a/a/a/a/", "*/"))
			assert(not isMatch("a/a/a/a/a", "*/"))
			assert(not isMatch("a/a/a/a/a/", "*/"))
			assert(not isMatch("x/y", "*/"))
			assert(not isMatch("z/z", "*/"))
			assert(not isMatch("x/y/", "*/"))
			assert(not isMatch("z/z/", "*/"))
			assert(not isMatch("a/b/c/.d/e/", "*/"))
			assert(not isMatch("a", "*/*/"))
			assert(not isMatch("a/", "*/*/"))
			assert(not isMatch("b", "*/*/"))
			assert(not isMatch("b/", "*/*/"))
			assert(not isMatch("a/a", "*/*/"))
			assert(isMatch("a/a/", "*/*/"))
			assert(not isMatch("a/b", "*/*/"))
			assert(isMatch("a/b/", "*/*/"))
			assert(not isMatch("a/c", "*/*/"))
			assert(isMatch("a/c/", "*/*/"))
			assert(not isMatch("a/x", "*/*/"))
			assert(isMatch("a/x/", "*/*/"))
			assert(not isMatch("a/a/a", "*/*/"))
			assert(not isMatch("a/a/b", "*/*/"))
			assert(not isMatch("a/a/b/", "*/*/"))
			assert(not isMatch("a/a/a/", "*/*/"))
			assert(not isMatch("a/a/a/a", "*/*/"))
			assert(not isMatch("a/a/a/a/", "*/*/"))
			assert(not isMatch("a/a/a/a/a", "*/*/"))
			assert(not isMatch("a/a/a/a/a/", "*/*/"))
			assert(not isMatch("x/y", "*/*/"))
			assert(not isMatch("z/z", "*/*/"))
			assert(isMatch("x/y/", "*/*/"))
			assert(isMatch("z/z/", "*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "*/*/"))
			assert(not isMatch("a", "*/*/*/"))
			assert(not isMatch("a/", "*/*/*/"))
			assert(not isMatch("b", "*/*/*/"))
			assert(not isMatch("b/", "*/*/*/"))
			assert(not isMatch("a/a", "*/*/*/"))
			assert(not isMatch("a/a/", "*/*/*/"))
			assert(not isMatch("a/b", "*/*/*/"))
			assert(not isMatch("a/b/", "*/*/*/"))
			assert(not isMatch("a/c", "*/*/*/"))
			assert(not isMatch("a/c/", "*/*/*/"))
			assert(not isMatch("a/x", "*/*/*/"))
			assert(not isMatch("a/x/", "*/*/*/"))
			assert(not isMatch("a/a/a", "*/*/*/"))
			assert(not isMatch("a/a/b", "*/*/*/"))
			assert(isMatch("a/a/b/", "*/*/*/"))
			assert(isMatch("a/a/a/", "*/*/*/"))
			assert(not isMatch("a/a/a/a", "*/*/*/"))
			assert(not isMatch("a/a/a/a/", "*/*/*/"))
			assert(not isMatch("a/a/a/a/a", "*/*/*/"))
			assert(not isMatch("a/a/a/a/a/", "*/*/*/"))
			assert(not isMatch("x/y", "*/*/*/"))
			assert(not isMatch("z/z", "*/*/*/"))
			assert(not isMatch("x/y/", "*/*/*/"))
			assert(not isMatch("z/z/", "*/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "*/*/*/"))
			assert(not isMatch("a", "*/*/*/*/"))
			assert(not isMatch("a/", "*/*/*/*/"))
			assert(not isMatch("b", "*/*/*/*/"))
			assert(not isMatch("b/", "*/*/*/*/"))
			assert(not isMatch("a/a", "*/*/*/*/"))
			assert(not isMatch("a/a/", "*/*/*/*/"))
			assert(not isMatch("a/b", "*/*/*/*/"))
			assert(not isMatch("a/b/", "*/*/*/*/"))
			assert(not isMatch("a/c", "*/*/*/*/"))
			assert(not isMatch("a/c/", "*/*/*/*/"))
			assert(not isMatch("a/x", "*/*/*/*/"))
			assert(not isMatch("a/x/", "*/*/*/*/"))
			assert(not isMatch("a/a/a", "*/*/*/*/"))
			assert(not isMatch("a/a/b", "*/*/*/*/"))
			assert(not isMatch("a/a/b/", "*/*/*/*/"))
			assert(not isMatch("a/a/a/", "*/*/*/*/"))
			assert(not isMatch("a/a/a/a", "*/*/*/*/"))
			assert(isMatch("a/a/a/a/", "*/*/*/*/"))
			assert(not isMatch("a/a/a/a/a", "*/*/*/*/"))
			assert(not isMatch("a/a/a/a/a/", "*/*/*/*/"))
			assert(not isMatch("x/y", "*/*/*/*/"))
			assert(not isMatch("z/z", "*/*/*/*/"))
			assert(not isMatch("x/y/", "*/*/*/*/"))
			assert(not isMatch("z/z/", "*/*/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "*/*/*/*/"))
			assert(not isMatch("a", "*/*/*/*/*/"))
			assert(not isMatch("a/", "*/*/*/*/*/"))
			assert(not isMatch("b", "*/*/*/*/*/"))
			assert(not isMatch("b/", "*/*/*/*/*/"))
			assert(not isMatch("a/a", "*/*/*/*/*/"))
			assert(not isMatch("a/a/", "*/*/*/*/*/"))
			assert(not isMatch("a/b", "*/*/*/*/*/"))
			assert(not isMatch("a/b/", "*/*/*/*/*/"))
			assert(not isMatch("a/c", "*/*/*/*/*/"))
			assert(not isMatch("a/c/", "*/*/*/*/*/"))
			assert(not isMatch("a/x", "*/*/*/*/*/"))
			assert(not isMatch("a/x/", "*/*/*/*/*/"))
			assert(not isMatch("a/a/a", "*/*/*/*/*/"))
			assert(not isMatch("a/a/b", "*/*/*/*/*/"))
			assert(not isMatch("a/a/b/", "*/*/*/*/*/"))
			assert(not isMatch("a/a/a/", "*/*/*/*/*/"))
			assert(not isMatch("a/a/a/a", "*/*/*/*/*/"))
			assert(not isMatch("a/a/a/a/", "*/*/*/*/*/"))
			assert(not isMatch("a/a/a/a/a", "*/*/*/*/*/"))
			assert(isMatch("a/a/a/a/a/", "*/*/*/*/*/"))
			assert(not isMatch("x/y", "*/*/*/*/*/"))
			assert(not isMatch("z/z", "*/*/*/*/*/"))
			assert(not isMatch("x/y/", "*/*/*/*/*/"))
			assert(not isMatch("z/z/", "*/*/*/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "*/*/*/*/*/"))
			assert(not isMatch("a", "a/*/"))
			assert(not isMatch("a/", "a/*/"))
			assert(not isMatch("b", "a/*/"))
			assert(not isMatch("b/", "a/*/"))
			assert(not isMatch("a/a", "a/*/"))
			assert(isMatch("a/a/", "a/*/"))
			assert(not isMatch("a/b", "a/*/"))
			assert(isMatch("a/b/", "a/*/"))
			assert(not isMatch("a/c", "a/*/"))
			assert(isMatch("a/c/", "a/*/"))
			assert(not isMatch("a/x", "a/*/"))
			assert(isMatch("a/x/", "a/*/"))
			assert(not isMatch("a/a/a", "a/*/"))
			assert(not isMatch("a/a/b", "a/*/"))
			assert(not isMatch("a/a/b/", "a/*/"))
			assert(not isMatch("a/a/a/", "a/*/"))
			assert(not isMatch("a/a/a/a", "a/*/"))
			assert(not isMatch("a/a/a/a/", "a/*/"))
			assert(not isMatch("a/a/a/a/a", "a/*/"))
			assert(not isMatch("a/a/a/a/a/", "a/*/"))
			assert(not isMatch("x/y", "a/*/"))
			assert(not isMatch("z/z", "a/*/"))
			assert(not isMatch("x/y/", "a/*/"))
			assert(not isMatch("z/z/", "a/*/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/"))
			assert(not isMatch("a", "a/*/*/"))
			assert(not isMatch("a/", "a/*/*/"))
			assert(not isMatch("b", "a/*/*/"))
			assert(not isMatch("b/", "a/*/*/"))
			assert(not isMatch("a/a", "a/*/*/"))
			assert(not isMatch("a/a/", "a/*/*/"))
			assert(not isMatch("a/b", "a/*/*/"))
			assert(not isMatch("a/b/", "a/*/*/"))
			assert(not isMatch("a/c", "a/*/*/"))
			assert(not isMatch("a/c/", "a/*/*/"))
			assert(not isMatch("a/x", "a/*/*/"))
			assert(not isMatch("a/x/", "a/*/*/"))
			assert(not isMatch("a/a/a", "a/*/*/"))
			assert(not isMatch("a/a/b", "a/*/*/"))
			assert(isMatch("a/a/b/", "a/*/*/"))
			assert(isMatch("a/a/a/", "a/*/*/"))
			assert(not isMatch("a/a/a/a", "a/*/*/"))
			assert(not isMatch("a/a/a/a/", "a/*/*/"))
			assert(not isMatch("a/a/a/a/a", "a/*/*/"))
			assert(not isMatch("a/a/a/a/a/", "a/*/*/"))
			assert(not isMatch("x/y", "a/*/*/"))
			assert(not isMatch("z/z", "a/*/*/"))
			assert(not isMatch("x/y/", "a/*/*/"))
			assert(not isMatch("z/z/", "a/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/*/"))
			assert(not isMatch("a", "a/*/*/*/"))
			assert(not isMatch("a/", "a/*/*/*/"))
			assert(not isMatch("b", "a/*/*/*/"))
			assert(not isMatch("b/", "a/*/*/*/"))
			assert(not isMatch("a/a", "a/*/*/*/"))
			assert(not isMatch("a/a/", "a/*/*/*/"))
			assert(not isMatch("a/b", "a/*/*/*/"))
			assert(not isMatch("a/b/", "a/*/*/*/"))
			assert(not isMatch("a/c", "a/*/*/*/"))
			assert(not isMatch("a/c/", "a/*/*/*/"))
			assert(not isMatch("a/x", "a/*/*/*/"))
			assert(not isMatch("a/x/", "a/*/*/*/"))
			assert(not isMatch("a/a/a", "a/*/*/*/"))
			assert(not isMatch("a/a/b", "a/*/*/*/"))
			assert(not isMatch("a/a/b/", "a/*/*/*/"))
			assert(not isMatch("a/a/a/", "a/*/*/*/"))
			assert(not isMatch("a/a/a/a", "a/*/*/*/"))
			assert(isMatch("a/a/a/a/", "a/*/*/*/"))
			assert(not isMatch("a/a/a/a/a", "a/*/*/*/"))
			assert(not isMatch("a/a/a/a/a/", "a/*/*/*/"))
			assert(not isMatch("x/y", "a/*/*/*/"))
			assert(not isMatch("z/z", "a/*/*/*/"))
			assert(not isMatch("x/y/", "a/*/*/*/"))
			assert(not isMatch("z/z/", "a/*/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/*/*/"))
			assert(not isMatch("a", "a/*/*/*/*/"))
			assert(not isMatch("a/", "a/*/*/*/*/"))
			assert(not isMatch("b", "a/*/*/*/*/"))
			assert(not isMatch("b/", "a/*/*/*/*/"))
			assert(not isMatch("a/a", "a/*/*/*/*/"))
			assert(not isMatch("a/a/", "a/*/*/*/*/"))
			assert(not isMatch("a/b", "a/*/*/*/*/"))
			assert(not isMatch("a/b/", "a/*/*/*/*/"))
			assert(not isMatch("a/c", "a/*/*/*/*/"))
			assert(not isMatch("a/c/", "a/*/*/*/*/"))
			assert(not isMatch("a/x", "a/*/*/*/*/"))
			assert(not isMatch("a/x/", "a/*/*/*/*/"))
			assert(not isMatch("a/a/a", "a/*/*/*/*/"))
			assert(not isMatch("a/a/b", "a/*/*/*/*/"))
			assert(not isMatch("a/a/b/", "a/*/*/*/*/"))
			assert(not isMatch("a/a/a/", "a/*/*/*/*/"))
			assert(not isMatch("a/a/a/a", "a/*/*/*/*/"))
			assert(not isMatch("a/a/a/a/", "a/*/*/*/*/"))
			assert(not isMatch("a/a/a/a/a", "a/*/*/*/*/"))
			assert(isMatch("a/a/a/a/a/", "a/*/*/*/*/"))
			assert(not isMatch("x/y", "a/*/*/*/*/"))
			assert(not isMatch("z/z", "a/*/*/*/*/"))
			assert(not isMatch("x/y/", "a/*/*/*/*/"))
			assert(not isMatch("z/z/", "a/*/*/*/*/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/*/*/*/"))
			assert(not isMatch("a", "a/*/a/"))
			assert(not isMatch("a/", "a/*/a/"))
			assert(not isMatch("b", "a/*/a/"))
			assert(not isMatch("b/", "a/*/a/"))
			assert(not isMatch("a/a", "a/*/a/"))
			assert(not isMatch("a/a/", "a/*/a/"))
			assert(not isMatch("a/b", "a/*/a/"))
			assert(not isMatch("a/b/", "a/*/a/"))
			assert(not isMatch("a/c", "a/*/a/"))
			assert(not isMatch("a/c/", "a/*/a/"))
			assert(not isMatch("a/x", "a/*/a/"))
			assert(not isMatch("a/x/", "a/*/a/"))
			assert(not isMatch("a/a/a", "a/*/a/"))
			assert(not isMatch("a/a/b", "a/*/a/"))
			assert(not isMatch("a/a/b/", "a/*/a/"))
			assert(isMatch("a/a/a/", "a/*/a/"))
			assert(not isMatch("a/a/a/a", "a/*/a/"))
			assert(not isMatch("a/a/a/a/", "a/*/a/"))
			assert(not isMatch("a/a/a/a/a", "a/*/a/"))
			assert(not isMatch("a/a/a/a/a/", "a/*/a/"))
			assert(not isMatch("x/y", "a/*/a/"))
			assert(not isMatch("z/z", "a/*/a/"))
			assert(not isMatch("x/y/", "a/*/a/"))
			assert(not isMatch("z/z/", "a/*/a/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/a/"))
			assert(not isMatch("a", "a/*/b/"))
			assert(not isMatch("a/", "a/*/b/"))
			assert(not isMatch("b", "a/*/b/"))
			assert(not isMatch("b/", "a/*/b/"))
			assert(not isMatch("a/a", "a/*/b/"))
			assert(not isMatch("a/a/", "a/*/b/"))
			assert(not isMatch("a/b", "a/*/b/"))
			assert(not isMatch("a/b/", "a/*/b/"))
			assert(not isMatch("a/c", "a/*/b/"))
			assert(not isMatch("a/c/", "a/*/b/"))
			assert(not isMatch("a/x", "a/*/b/"))
			assert(not isMatch("a/x/", "a/*/b/"))
			assert(not isMatch("a/a/a", "a/*/b/"))
			assert(not isMatch("a/a/b", "a/*/b/"))
			assert(isMatch("a/a/b/", "a/*/b/"))
			assert(not isMatch("a/a/a/", "a/*/b/"))
			assert(not isMatch("a/a/a/a", "a/*/b/"))
			assert(not isMatch("a/a/a/a/", "a/*/b/"))
			assert(not isMatch("a/a/a/a/a", "a/*/b/"))
			assert(not isMatch("a/a/a/a/a/", "a/*/b/"))
			assert(not isMatch("x/y", "a/*/b/"))
			assert(not isMatch("z/z", "a/*/b/"))
			assert(not isMatch("x/y/", "a/*/b/"))
			assert(not isMatch("z/z/", "a/*/b/"))
			assert(not isMatch("a/b/c/.d/e/", "a/*/b/"))
		end)

		itFIXME("should match a literal star when escaped", function()
			assert(not isMatch(".md", "\\*"))
			assert(not isMatch("a**a.md", "\\*"))
			assert(not isMatch("**a.md", "\\*"))
			assert(not isMatch("**/a.md", "\\*"))
			assert(not isMatch("**.md", "\\*"))
			assert(not isMatch(".md", "\\*"))
			assert(isMatch("*", "\\*"))
			assert(not isMatch("**", "\\*"))
			assert(not isMatch("*.md", "\\*"))
			assert(not isMatch(".md", "\\*.md"))
			assert(not isMatch("a**a.md", "\\*.md"))
			assert(not isMatch("**a.md", "\\*.md"))
			assert(not isMatch("**/a.md", "\\*.md"))
			assert(not isMatch("**.md", "\\*.md"))
			assert(not isMatch(".md", "\\*.md"))
			assert(not isMatch("*", "\\*.md"))
			assert(not isMatch("**", "\\*.md"))
			assert(isMatch("*.md", "\\*.md"))
			assert(not isMatch(".md", "\\**.md"))
			assert(not isMatch("a**a.md", "\\**.md"))
			assert(isMatch("**a.md", "\\**.md"))
			assert(not isMatch("**/a.md", "\\**.md"))
			assert(isMatch("**.md", "\\**.md"))
			assert(not isMatch(".md", "\\**.md"))
			assert(not isMatch("*", "\\**.md"))
			assert(not isMatch("**", "\\**.md"))
			assert(isMatch("*.md", "\\**.md"))
			assert(not isMatch(".md", "a\\**.md"))
			assert(isMatch("a**a.md", "a\\**.md"))
			assert(not isMatch("**a.md", "a\\**.md"))
			assert(not isMatch("**/a.md", "a\\**.md"))
			assert(not isMatch("**.md", "a\\**.md"))
			assert(not isMatch(".md", "a\\**.md"))
			assert(not isMatch("*", "a\\**.md"))
			assert(not isMatch("**", "a\\**.md"))
			assert(not isMatch("*.md", "a\\**.md"))
		end)

		it("should match file paths", function()
			assert(not isMatch("a/.b", "a/**/z/*.md"))
			assert(not isMatch("a/b/c/j/e/z/c.txt", "a/**/j/**/z/*.md"))
			assert(not isMatch("a/b/z/.a", "a/**/z/*.a"))
			assert(not isMatch("a/b/z/.a", "a/*/z/*.a"))
			assert(not isMatch("foo.txt", "*/*.txt"))
			assert(isMatch("a/.b", "a/.*"))
			assert(isMatch("a/b/c/d/e/j/n/p/o/z/c.md", "a/**/j/**/z/*.md"))
			assert(isMatch("a/b/c/d/e/z/c.md", "a/**/z/*.md"))
			assert(isMatch("a/b/c/xyz.md", "a/b/c/*.md"))
			assert(isMatch("a/b/z/.a", "a/*/z/.a"))
			assert(isMatch("a/bb.bb/aa/b.b/aa/c/xyz.md", "a/**/c/*.md"))
			assert(isMatch("a/bb.bb/aa/bb/aa/c/xyz.md", "a/**/c/*.md"))
			assert(isMatch("a/bb.bb/c/xyz.md", "a/*/c/*.md"))
			assert(isMatch("a/bb/c/xyz.md", "a/*/c/*.md"))
			assert(isMatch("a/bbbb/c/xyz.md", "a/*/c/*.md"))
			assert(isMatch("foo.txt", "**/foo.txt"))
			assert(isMatch("foo/bar.txt", "**/*.txt"))
			assert(isMatch("foo/bar/baz.txt", "**/*.txt"))
		end)

		it("should match paths with leading `./` when pattern has `./`", function()
			local function format(str)
				return str:gsub("^%./", "")
			end
			assert(not isMatch("./a/b/c/d/e/z/c.md", "./a/**/j/**/z/*.md", { format = format }))
			assert(not isMatch("./a/b/c/j/e/z/c.txt", "./a/**/j/**/z/*.md", { format = format }))
			assert(isMatch("./a/b/c/d/e/j/n/p/o/z/c.md", "./a/**/j/**/z/*.md", { format = format }))
			assert(isMatch("./a/b/c/d/e/z/c.md", "./a/**/z/*.md", { format = format }))
			assert(isMatch("./a/b/c/j/e/z/c.md", "./a/**/j/**/z/*.md", { format = format }))
			assert(isMatch("./a/b/z/.a", "./a/**/z/.a", { format = format }))
		end)

		itFIXME("should match leading slashes", function()
			assert(not isMatch("ef", "/*"))
			assert(isMatch("/ef", "/*"))
			assert(isMatch("/foo/bar.txt", "/foo/*"))
			assert(isMatch("/foo/bar.txt", "/foo/**"))
			assert(isMatch("/foo/bar.txt", "/foo/**/**/*.txt"))
			assert(isMatch("/foo/bar.txt", "/foo/**/**/bar.txt"))
			assert(isMatch("/foo/bar.txt", "/foo/**/*.txt"))
			assert(isMatch("/foo/bar.txt", "/foo/**/bar.txt"))
			assert(not isMatch("/foo/bar.txt", "/foo/*/bar.txt"))
			assert(not isMatch("/foo/bar/baz.txt", "/foo/*"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/**"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/**"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/**/*.txt"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/**/*/*.txt"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/**/*/baz.txt"))
			assert(not isMatch("/foo/bar/baz.txt", "/foo/*.txt"))
			assert(isMatch("/foo/bar/baz.txt", "/foo/*/*.txt"))
			assert(not isMatch("/foo/bar/baz.txt", "/foo/*/*/baz.txt"))
			assert(not isMatch("/foo/bar/baz.txt", "/foo/bar**"))
			assert(isMatch("/foo/bar/baz/qux.txt", "**/*.txt"))
			assert(not isMatch("/foo/bar/baz/qux.txt", "**/.txt"))
			assert(not isMatch("/foo/bar/baz/qux.txt", "*/*.txt"))
			assert(not isMatch("/foo/bar/baz/qux.txt", "/foo/**.txt"))
			assert(isMatch("/foo/bar/baz/qux.txt", "/foo/**/*.txt"))
			assert(not isMatch("/foo/bar/baz/qux.txt", "/foo/*/*.txt"))
			assert(not isMatch("/foo/bar/baz/qux.txt", "/foo/bar**/*.txt"))
			assert(not isMatch("/.txt", "*.txt"))
			assert(not isMatch("/.txt", "/*.txt"))
			assert(not isMatch("/.txt", "*/*.txt"))
			assert(not isMatch("/.txt", "**/*.txt"))
			assert(not isMatch("/.txt", "*.txt", { dot = true }))
			assert(isMatch("/.txt", "/*.txt", { dot = true }))
			assert(isMatch("/.txt", "*/*.txt", { dot = true }))
			assert(isMatch("/.txt", "**/*.txt", { dot = true }))
		end)

		it("should match double slashes", function()
			assert(not isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*"))
			assert(not isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*"))
			assert(isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/**"))
			assert(not isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/**", { noglobstar = true }))
			assert(isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/**"))
			assert(isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/**/app.min.js"))
			assert(isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*/*/app.min.js"))
			assert(
				isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*/*/app.min.js", { noglobstar = true })
			)
			assert(not isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*/app.min.js"))
			assert(not isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/*/app.min.js"))
			assert(isMatch("https://foo.com/bar/baz/app.min.js", "https://foo.com/**/app.min.js"))
			assert(
				not isMatch(
					"https://foo.com/bar/baz/app.min.js",
					"https://foo.com/**/app.min.js",
					{ noglobstar = true }
				)
			)
		end)
	end)
end
