-- ROBLOX upstream: https://github.com/micromatch/picomatch/tree/2.3.1/test/dots-invalid.js

return function()
	local CurrentModule = script.Parent
	local PicomatchModule = CurrentModule.Parent

	local isMatch = require(PicomatchModule).isMatch
	describe("invalid (exclusive) dots", function()
		describe("double dots", function()
			describe("no options", function()
				describe("should not match leading double-dots", function()
					it("with single star", function()
						assert(not isMatch("../abc", "*/*"))
						assert(not isMatch("../abc", "*/abc"))
						assert(not isMatch("../abc", "*/abc/*"))
					end)

					it("with dot + single star", function()
						assert(not isMatch("../abc", ".*/*"))
						assert(not isMatch("../abc", ".*/abc"))
						assert(not isMatch("../abc", "*./*"))
						assert(not isMatch("../abc", "*./abc"))
					end)

					it("with globstar", function()
						assert(not isMatch("../abc", "**"))
						assert(not isMatch("../abc", "**/**"))
						assert(not isMatch("../abc", "**/**/**"))
						assert(not isMatch("../abc", "**/abc"))
						assert(not isMatch("../abc", "**/abc/**"))
						assert(not isMatch("../abc", "abc/**"))
						assert(not isMatch("../abc", "abc/**/**"))
						assert(not isMatch("../abc", "abc/**/**/**"))
						assert(not isMatch("../abc", "**/abc"))
						assert(not isMatch("../abc", "**/abc/**"))
						assert(not isMatch("../abc", "**/abc/**/**"))
						assert(not isMatch("../abc", "**/**/abc/**"))
						assert(not isMatch("../abc", "**/**/abc/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("../abc", ".**"))
						assert(not isMatch("../abc", ".**/**"))
						assert(not isMatch("../abc", ".**/abc"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("../abc", "*.*/**"))
						assert(not isMatch("../abc", "*.*/abc"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("../abc", "**./**"))
						assert(not isMatch("../abc", "**./abc"))
					end)
				end)

				describe("should not match nested double-dots", function()
					it("with star", function()
						assert(not isMatch("/../abc", "*/*"))
						assert(not isMatch("/../abc", "/*/*"))
						assert(not isMatch("/../abc", "*/*/*"))
						assert(not isMatch("abc/../abc", "*/*/*"))
						assert(not isMatch("abc/../abc/abc", "*/*/*/*"))
					end)

					it("with dot + star", function()
						assert(not isMatch("/../abc", "*/.*/*"))
						assert(not isMatch("/../abc", "/.*/*"))
						assert(not isMatch("/../abc", "*/*.*/*"))
						assert(not isMatch("/../abc", "/*.*/*"))
						assert(not isMatch("/../abc", "*/*./*"))
						assert(not isMatch("/../abc", "/*./*"))
						assert(not isMatch("abc/../abc", "*/.*/*"))
						assert(not isMatch("abc/../abc", "*/*.*/*"))
						assert(not isMatch("abc/../abc", "*/*./*"))
					end)

					it("with globstar", function()
						assert(not isMatch("/../abc", "**"))
						assert(not isMatch("/../abc", "**/**"))
						assert(not isMatch("/../abc", "/**/**"))
						assert(not isMatch("/../abc", "**/**/**"))
						assert(not isMatch("abc/../abc", "**/**/**"))
						assert(not isMatch("abc/../abc/abc", "**/**/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/../abc", "**/.**/**"))
						assert(not isMatch("/../abc", "/.**/**"))
						assert(not isMatch("abc/../abc", "**/.**/**"))
						assert(not isMatch("abc/../abc", "/.**/**"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/../abc", "**/**./**"))
						assert(not isMatch("/../abc", "/**./**"))
						assert(not isMatch("abc/../abc", "**/**./**"))
						assert(not isMatch("abc/../abc", "/**./**"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/../abc", "**/**.**/**"))
						assert(not isMatch("/../abc", "**/*.*/**"))
						assert(not isMatch("/../abc", "/**.**/**"))
						assert(not isMatch("/../abc", "/*.*/**"))
						assert(not isMatch("abc/../abc", "**/**.**/**"))
						assert(not isMatch("abc/../abc", "**/*.*/**"))
						assert(not isMatch("abc/../abc", "/**.**/**"))
						assert(not isMatch("abc/../abc", "/*.*/**"))
					end)
				end)

				describe("should not match trailing double-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/..", "*/*"))
						assert(not isMatch("abc/..", "*/*/"))
						assert(not isMatch("abc/..", "*/*/*"))
						assert(not isMatch("abc/../", "*/*"))
						assert(not isMatch("abc/../", "*/*/"))
						assert(not isMatch("abc/../", "*/*/*"))
						assert(not isMatch("abc/../abc/../", "*/*/*/*"))
						assert(not isMatch("abc/../abc/../", "*/*/*/*/"))
						assert(not isMatch("abc/../abc/abc/../", "*/*/*/*/*"))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/..", "*/.*"))
						assert(not isMatch("abc/..", "*/.*/"))
						assert(not isMatch("abc/..", "*/.*/*"))
						assert(not isMatch("abc/../", "*/.*"))
						assert(not isMatch("abc/../", "*/.*/"))
						assert(not isMatch("abc/../", "*/.*/*"))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*"))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*/"))
						assert(not isMatch("abc/../abc/abc/../", "*/.*/*/.*/*"))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/..", "*/*."))
						assert(not isMatch("abc/..", "*/*./"))
						assert(not isMatch("abc/..", "*/*./*"))
						assert(not isMatch("abc/../", "*/*."))
						assert(not isMatch("abc/../", "*/*./"))
						assert(not isMatch("abc/../", "*/*./*"))
						assert(not isMatch("abc/../abc/../", "*/*./*/*."))
						assert(not isMatch("abc/../abc/../", "*/*./*/*./"))
						assert(not isMatch("abc/../abc/abc/../", "*/*./*/*./*"))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/..", "**/**"))
						assert(not isMatch("abc/..", "**/**/"))
						assert(not isMatch("abc/..", "**/**/**"))
						assert(not isMatch("abc/../", "**/**"))
						assert(not isMatch("abc/../", "**/**/"))
						assert(not isMatch("abc/../", "**/**/**"))
						assert(not isMatch("abc/../abc/../", "**/**/**/**"))
						assert(not isMatch("abc/../abc/../", "**/**/**/**/"))
						assert(not isMatch("abc/../abc/abc/../", "**/**/**/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/..", "**/.**"))
						assert(not isMatch("abc/..", "**/.**/"))
						assert(not isMatch("abc/..", "**/.**/**"))
						assert(not isMatch("abc/../", "**/.**"))
						assert(not isMatch("abc/../", "**/.**/"))
						assert(not isMatch("abc/../", "**/.**/**"))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**"))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**/"))
						assert(not isMatch("abc/../abc/abc/../", "**/.**/**/.**/**"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/..", "**/**.**"))
						assert(not isMatch("abc/..", "**/**.**/"))
						assert(not isMatch("abc/..", "**/**.**/**"))
						assert(not isMatch("abc/../", "**/**.**"))
						assert(not isMatch("abc/../", "**/**.**/"))
						assert(not isMatch("abc/../", "**/**.**/**"))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**"))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**/"))
						assert(not isMatch("abc/../abc/abc/../", "**/**.**/**/.**/**"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/..", "**/**."))
						assert(not isMatch("abc/..", "**/**./"))
						assert(not isMatch("abc/..", "**/**./**"))
						assert(not isMatch("abc/../", "**/**."))
						assert(not isMatch("abc/../", "**/**./"))
						assert(not isMatch("abc/../", "**/**./**"))
						assert(not isMatch("abc/../abc/../", "**/**./**/**."))
						assert(not isMatch("abc/../abc/../", "**/**./**/**./"))
						assert(not isMatch("abc/../abc/abc/../", "**/**./**/**./**"))
					end)
				end)
			end)

			describe("options = { dot: true }", function()
				describe("should not match leading double-dots", function()
					it("with single star", function()
						assert(not isMatch("../abc", "*/*", { dot = true }))
						assert(not isMatch("../abc", "*/abc", { dot = true }))
						assert(not isMatch("../abc", "*/abc/*", { dot = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("../abc", ".*/*", { dot = true }))
						assert(not isMatch("../abc", ".*/abc", { dot = true }))
						assert(not isMatch("../abc", "*./*", { dot = true }))
						assert(not isMatch("../abc", "*./abc", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("../abc", "**", { dot = true }))
						assert(not isMatch("../abc", "**/**", { dot = true }))
						assert(not isMatch("../abc", "**/**/**", { dot = true }))
						assert(not isMatch("../abc", "**/abc", { dot = true }))
						assert(not isMatch("../abc", "**/abc/**", { dot = true }))
						assert(not isMatch("../abc", "abc/**", { dot = true }))
						assert(not isMatch("../abc", "abc/**/**", { dot = true }))
						assert(not isMatch("../abc", "abc/**/**/**", { dot = true }))
						assert(not isMatch("../abc", "**/abc", { dot = true }))
						assert(not isMatch("../abc", "**/abc/**", { dot = true }))
						assert(not isMatch("../abc", "**/abc/**/**", { dot = true }))
						assert(not isMatch("../abc", "**/**/abc/**", { dot = true }))
						assert(not isMatch("../abc", "**/**/abc/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("../abc", ".**", { dot = true }))
						assert(not isMatch("../abc", ".**/**", { dot = true }))
						assert(not isMatch("../abc", ".**/abc", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("../abc", "*.*/**", { dot = true }))
						assert(not isMatch("../abc", "*.*/abc", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("../abc", "**./**", { dot = true }))
						assert(not isMatch("../abc", "**./abc", { dot = true }))
					end)
				end)

				describe("should not match nested double-dots", function()
					it("with star", function()
						assert(not isMatch("/../abc", "*/*", { dot = true }))
						assert(not isMatch("/../abc", "/*/*", { dot = true }))
						assert(not isMatch("/../abc", "*/*/*", { dot = true }))
						assert(not isMatch("abc/../abc", "*/*/*", { dot = true }))
						assert(not isMatch("abc/../abc/abc", "*/*/*/*", { dot = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/../abc", "*/.*/*", { dot = true }))
						assert(not isMatch("/../abc", "/.*/*", { dot = true }))
						assert(not isMatch("/../abc", "*/*.*/*", { dot = true }))
						assert(not isMatch("/../abc", "/*.*/*", { dot = true }))
						assert(not isMatch("/../abc", "*/*./*", { dot = true }))
						assert(not isMatch("/../abc", "/*./*", { dot = true }))
						assert(not isMatch("abc/../abc", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/../abc", "*/*.*/*", { dot = true }))
						assert(not isMatch("abc/../abc", "*/*./*", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/../abc", "**", { dot = true }))
						assert(not isMatch("/../abc", "**/**", { dot = true }))
						assert(not isMatch("/../abc", "/**/**", { dot = true }))
						assert(not isMatch("/../abc", "**/**/**", { dot = true }))
						assert(not isMatch("abc/../abc", "**/**/**", { dot = true }))
						assert(not isMatch("abc/../abc/abc", "**/**/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/../abc", "**/.**/**", { dot = true }))
						assert(not isMatch("/../abc", "/.**/**", { dot = true }))
						assert(not isMatch("abc/../abc", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/../abc", "/.**/**", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/../abc", "**/**./**", { dot = true }))
						assert(not isMatch("/../abc", "/**./**", { dot = true }))
						assert(not isMatch("abc/../abc", "**/**./**", { dot = true }))
						assert(not isMatch("abc/../abc", "/**./**", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/../abc", "**/**.**/**", { dot = true }))
						assert(not isMatch("/../abc", "**/*.*/**", { dot = true }))
						assert(not isMatch("/../abc", "/**.**/**", { dot = true }))
						assert(not isMatch("/../abc", "/*.*/**", { dot = true }))
						assert(not isMatch("abc/../abc", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/../abc", "**/*.*/**", { dot = true }))
						assert(not isMatch("abc/../abc", "/**.**/**", { dot = true }))
						assert(not isMatch("abc/../abc", "/*.*/**", { dot = true }))
					end)
				end)

				describe("should not match trailing double-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/..", "*/*", { dot = true }))
						assert(not isMatch("abc/..", "*/*/", { dot = true }))
						assert(not isMatch("abc/..", "*/*/*", { dot = true }))
						assert(not isMatch("abc/../", "*/*", { dot = true }))
						assert(not isMatch("abc/../", "*/*/", { dot = true }))
						assert(not isMatch("abc/../", "*/*/*", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*/", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*/*/*/*", { dot = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/..", "*/.*", { dot = true }))
						assert(not isMatch("abc/..", "*/.*/", { dot = true }))
						assert(not isMatch("abc/..", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/../", "*/.*", { dot = true }))
						assert(not isMatch("abc/../", "*/.*/", { dot = true }))
						assert(not isMatch("abc/../", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*/", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/.*/*/.*/*", { dot = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/..", "*/*.", { dot = true }))
						assert(not isMatch("abc/..", "*/*./", { dot = true }))
						assert(not isMatch("abc/..", "*/*./*", { dot = true }))
						assert(not isMatch("abc/../", "*/*.", { dot = true }))
						assert(not isMatch("abc/../", "*/*./", { dot = true }))
						assert(not isMatch("abc/../", "*/*./*", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*.", { dot = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*./", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*./*/*./*", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/..", "**/**", { dot = true }))
						assert(not isMatch("abc/..", "**/**/", { dot = true }))
						assert(not isMatch("abc/..", "**/**/**", { dot = true }))
						assert(not isMatch("abc/../", "**/**", { dot = true }))
						assert(not isMatch("abc/../", "**/**/", { dot = true }))
						assert(not isMatch("abc/../", "**/**/**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**/", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**/**/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/..", "**/.**", { dot = true }))
						assert(not isMatch("abc/..", "**/.**/", { dot = true }))
						assert(not isMatch("abc/..", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/../", "**/.**", { dot = true }))
						assert(not isMatch("abc/../", "**/.**/", { dot = true }))
						assert(not isMatch("abc/../", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**/", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/.**/**/.**/**", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/..", "**/**.**", { dot = true }))
						assert(not isMatch("abc/..", "**/**.**/", { dot = true }))
						assert(not isMatch("abc/..", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/../", "**/**.**", { dot = true }))
						assert(not isMatch("abc/../", "**/**.**/", { dot = true }))
						assert(not isMatch("abc/../", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**/", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**.**/**/.**/**", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/..", "**/**.", { dot = true }))
						assert(not isMatch("abc/..", "**/**./", { dot = true }))
						assert(not isMatch("abc/..", "**/**./**", { dot = true }))
						assert(not isMatch("abc/../", "**/**.", { dot = true }))
						assert(not isMatch("abc/../", "**/**./", { dot = true }))
						assert(not isMatch("abc/../", "**/**./**", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**.", { dot = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**./", { dot = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**./**/**./**", { dot = true }))
					end)
				end)
			end)

			describe("options = { strictSlashes: true }", function()
				describe("should not match leading double-dots", function()
					it("with single star", function()
						assert(not isMatch("../abc", "*/*", { strictSlashes = true }))
						assert(not isMatch("../abc", "*/abc", { strictSlashes = true }))
						assert(not isMatch("../abc", "*/abc/*", { strictSlashes = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("../abc", ".*/*", { strictSlashes = true }))
						assert(not isMatch("../abc", ".*/abc", { strictSlashes = true }))
						assert(not isMatch("../abc", "*./*", { strictSlashes = true }))
						assert(not isMatch("../abc", "*./abc", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("../abc", "**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**/**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/abc/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/abc/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("../abc", ".**", { strictSlashes = true }))
						assert(not isMatch("../abc", ".**/**", { strictSlashes = true }))
						assert(not isMatch("../abc", ".**/abc", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("../abc", "*.*/**", { strictSlashes = true }))
						assert(not isMatch("../abc", "*.*/abc", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("../abc", "**./**", { strictSlashes = true }))
						assert(not isMatch("../abc", "**./abc", { strictSlashes = true }))
					end)
				end)

				describe("should not match nested double-dots", function()
					it("with star", function()
						assert(not isMatch("/../abc", "*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc", "*/*/*/*", { strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/../abc", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/.*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*.*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/*.*/*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*./*", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/../abc", "**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "**/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/**/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc", "**/**/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/../abc", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/../abc", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/**./**", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/../abc", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "**/*.*/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/**.**/**", { strictSlashes = true }))
						assert(not isMatch("/../abc", "/*.*/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/*.*/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/*.*/**", { strictSlashes = true }))
					end)
				end)

				describe("should not match trailing double-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/..", "*/*", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*/*/*/*", { strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/..", "*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/.*/*/.*/*", { strictSlashes = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/..", "*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*./*/*./*", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/..", "**/**", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**/**/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/..", "**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/.**/**/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/..", "**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**.**/**/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/..", "**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "**/**./**/**./**", { strictSlashes = true }))
					end)
				end)
			end)

			describe("options = { dot: true, strictSlashes: true }", function()
				describe("should not match leading double-dots", function()
					it("with single star", function()
						assert(not isMatch("../abc", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "*/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "*/abc/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("../abc", ".*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", ".*/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "*./abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("../abc", "**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "abc/**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/abc/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**/**/abc/**/**", { dot = true, strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("../abc", ".**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", ".**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", ".**/abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("../abc", "*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "*.*/abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("../abc", "**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("../abc", "**./abc", { dot = true, strictSlashes = true }))
					end)
				end)

				describe("should not match nested double-dots", function()
					it("with star", function()
						assert(not isMatch("/../abc", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc", "*/*/*/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/../abc", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "*/*./*", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/../abc", "**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc", "**/**/**/**", { dot = true, strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/../abc", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/.**/**", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/../abc", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/**./**", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/../abc", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "**/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/../abc", "/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "**/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc", "/*.*/**", { dot = true, strictSlashes = true }))
					end)
				end)

				describe("should not match trailing double-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/..", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*/*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*/*/*/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/..", "*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/.*/*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/.*/*/.*/*", { dot = true, strictSlashes = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/..", "*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "*/*./*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/abc/../", "*/*./*/*./*", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/..", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**/**/**/", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/../abc/abc/../", "**/**/**/**/**", { dot = true, strictSlashes = true })
						)
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/..", "**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/.**/**/.**/", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/../abc/abc/../", "**/.**/**/.**/**", { dot = true, strictSlashes = true })
						)
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/..", "**/**.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**.**/**/**.**", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/../abc/../", "**/**.**/**/**.**/", { dot = true, strictSlashes = true })
						)
						assert(
							not isMatch(
								"abc/../abc/abc/../",
								"**/**.**/**/.**/**",
								{ dot = true, strictSlashes = true }
							)
						)
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/..", "**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/..", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/../abc/../", "**/**./**/**./", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/../abc/abc/../", "**/**./**/**./**", { dot = true, strictSlashes = true })
						)
					end)
				end)
			end)
		end)
		describe("single dots", function()
			describe("no options", function()
				describe("should not match leading single-dots", function()
					it("with single star", function()
						assert(not isMatch("./abc", "*"))
						assert(not isMatch("./abc", "*/*"))
						assert(not isMatch("./abc", "*/abc"))
						assert(not isMatch("./abc", "*/abc/*"))
					end)

					it("with dot + single star", function()
						assert(not isMatch("./abc", ".*/*"))
						assert(not isMatch("./abc", ".*/abc"))
						assert(not isMatch("./abc", "*./*"))
						assert(not isMatch("./abc", "*./abc"))
					end)

					it("with globstar", function()
						assert(not isMatch("./abc", "**"))
						assert(not isMatch("./abc", "**/**"))
						assert(not isMatch("./abc", "**/**/**"))
						assert(not isMatch("./abc", "**/abc"))
						assert(not isMatch("./abc", "**/abc/**"))
						assert(not isMatch("./abc", "abc/**"))
						assert(not isMatch("./abc", "abc/**/**"))
						assert(not isMatch("./abc", "abc/**/**/**"))
						assert(not isMatch("./abc", "**/abc"))
						assert(not isMatch("./abc", "**/abc/**"))
						assert(not isMatch("./abc", "**/abc/**/**"))
						assert(not isMatch("./abc", "**/**/abc/**"))
						assert(not isMatch("./abc", "**/**/abc/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("./abc", ".**"))
						assert(not isMatch("./abc", ".**/**"))
						assert(not isMatch("./abc", ".**/abc"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("./abc", "*.*/**"))
						assert(not isMatch("./abc", "*.*/abc"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("./abc", "**./**"))
						assert(not isMatch("./abc", "**./abc"))
					end)
				end)

				describe("should not match nested single-dots", function()
					it("with star", function()
						assert(not isMatch("/./abc", "*/*"))
						assert(not isMatch("/./abc", "/*/*"))
						assert(not isMatch("/./abc", "*/*/*"))
						assert(not isMatch("abc/./abc", "*/*/*"))
						assert(not isMatch("abc/./abc/abc", "*/*/*/*"))
					end)

					it("with dot + star", function()
						assert(not isMatch("/./abc", "*/.*/*"))
						assert(not isMatch("/./abc", "/.*/*"))
						assert(not isMatch("/./abc", "*/*.*/*"))
						assert(not isMatch("/./abc", "/*.*/*"))
						assert(not isMatch("/./abc", "*/*./*"))
						assert(not isMatch("/./abc", "/*./*"))
						assert(not isMatch("abc/./abc", "*/.*/*"))
						assert(not isMatch("abc/./abc", "*/*.*/*"))
						assert(not isMatch("abc/./abc", "*/*./*"))
					end)

					it("with globstar", function()
						assert(not isMatch("/./abc", "**"))
						assert(not isMatch("/./abc", "**/**"))
						assert(not isMatch("/./abc", "/**/**"))
						assert(not isMatch("/./abc", "**/**/**"))
						assert(not isMatch("abc/./abc", "**/**/**"))
						assert(not isMatch("abc/./abc/abc", "**/**/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/./abc", "**/.**/**"))
						assert(not isMatch("/./abc", "/.**/**"))
						assert(not isMatch("abc/./abc", "**/.**/**"))
						assert(not isMatch("abc/./abc", "/.**/**"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/./abc", "**/**./**"))
						assert(not isMatch("/./abc", "/**./**"))
						assert(not isMatch("abc/./abc", "**/**./**"))
						assert(not isMatch("abc/./abc", "/**./**"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/./abc", "**/**.**/**"))
						assert(not isMatch("/./abc", "**/*.*/**"))
						assert(not isMatch("/./abc", "/**.**/**"))
						assert(not isMatch("/./abc", "/*.*/**"))
						assert(not isMatch("abc/./abc", "**/**.**/**"))
						assert(not isMatch("abc/./abc", "**/*.*/**"))
						assert(not isMatch("abc/./abc", "/**.**/**"))
						assert(not isMatch("abc/./abc", "/*.*/**"))
					end)
				end)

				describe("should not match trailing single-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/.", "*/*"))
						assert(not isMatch("abc/.", "*/*/"))
						assert(not isMatch("abc/.", "*/*/*"))
						assert(not isMatch("abc/./", "*/*"))
						assert(not isMatch("abc/./", "*/*/"))
						assert(not isMatch("abc/./", "*/*/*"))
						assert(not isMatch("abc/./abc/./", "*/*/*/*"))
						assert(not isMatch("abc/./abc/./", "*/*/*/*/"))
						assert(not isMatch("abc/./abc/abc/./", "*/*/*/*/*"))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/.", "*/.*"))
						assert(not isMatch("abc/.", "*/.*/"))
						assert(not isMatch("abc/.", "*/.*/*"))
						assert(not isMatch("abc/./", "*/.*"))
						assert(not isMatch("abc/./", "*/.*/"))
						assert(not isMatch("abc/./", "*/.*/*"))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*"))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*/"))
						assert(not isMatch("abc/./abc/abc/./", "*/.*/*/.*/*"))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/.", "*/*."))
						assert(not isMatch("abc/.", "*/*./"))
						assert(not isMatch("abc/.", "*/*./*"))
						assert(not isMatch("abc/./", "*/*."))
						assert(not isMatch("abc/./", "*/*./"))
						assert(not isMatch("abc/./", "*/*./*"))
						assert(not isMatch("abc/./abc/./", "*/*./*/*."))
						assert(not isMatch("abc/./abc/./", "*/*./*/*./"))
						assert(not isMatch("abc/./abc/abc/./", "*/*./*/*./*"))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/.", "**/**"))
						assert(not isMatch("abc/.", "**/**/"))
						assert(not isMatch("abc/.", "**/**/**"))
						assert(not isMatch("abc/./", "**/**"))
						assert(not isMatch("abc/./", "**/**/"))
						assert(not isMatch("abc/./", "**/**/**"))
						assert(not isMatch("abc/./abc/./", "**/**/**/**"))
						assert(not isMatch("abc/./abc/./", "**/**/**/**/"))
						assert(not isMatch("abc/./abc/abc/./", "**/**/**/**/**"))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/.", "**/.**"))
						assert(not isMatch("abc/.", "**/.**/"))
						assert(not isMatch("abc/.", "**/.**/**"))
						assert(not isMatch("abc/./", "**/.**"))
						assert(not isMatch("abc/./", "**/.**/"))
						assert(not isMatch("abc/./", "**/.**/**"))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**"))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**/"))
						assert(not isMatch("abc/./abc/abc/./", "**/.**/**/.**/**"))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/.", "**/**.**"))
						assert(not isMatch("abc/.", "**/**.**/"))
						assert(not isMatch("abc/.", "**/**.**/**"))
						assert(not isMatch("abc/./", "**/**.**"))
						assert(not isMatch("abc/./", "**/**.**/"))
						assert(not isMatch("abc/./", "**/**.**/**"))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**"))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**/"))
						assert(not isMatch("abc/./abc/abc/./", "**/**.**/**/.**/**"))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/.", "**/**."))
						assert(not isMatch("abc/.", "**/**./"))
						assert(not isMatch("abc/.", "**/**./**"))
						assert(not isMatch("abc/./", "**/**."))
						assert(not isMatch("abc/./", "**/**./"))
						assert(not isMatch("abc/./", "**/**./**"))
						assert(not isMatch("abc/./abc/./", "**/**./**/**."))
						assert(not isMatch("abc/./abc/./", "**/**./**/**./"))
						assert(not isMatch("abc/./abc/abc/./", "**/**./**/**./**"))
					end)
				end)
			end)

			describe("options = { dot: true }", function()
				describe("should not match leading single-dots", function()
					it("with single star", function()
						assert(not isMatch("./abc", "*/*", { dot = true }))
						assert(not isMatch("./abc", "*/abc", { dot = true }))
						assert(not isMatch("./abc", "*/abc/*", { dot = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("./abc", ".*/*", { dot = true }))
						assert(not isMatch("./abc", ".*/abc", { dot = true }))
						assert(not isMatch("./abc", "*./*", { dot = true }))
						assert(not isMatch("./abc", "*./abc", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("./abc", "**", { dot = true }))
						assert(not isMatch("./abc", "**/**", { dot = true }))
						assert(not isMatch("./abc", "**/**/**", { dot = true }))
						assert(not isMatch("./abc", "**/abc", { dot = true }))
						assert(not isMatch("./abc", "**/abc/**", { dot = true }))
						assert(not isMatch("./abc", "abc/**", { dot = true }))
						assert(not isMatch("./abc", "abc/**/**", { dot = true }))
						assert(not isMatch("./abc", "abc/**/**/**", { dot = true }))
						assert(not isMatch("./abc", "**/abc", { dot = true }))
						assert(not isMatch("./abc", "**/abc/**", { dot = true }))
						assert(not isMatch("./abc", "**/abc/**/**", { dot = true }))
						assert(not isMatch("./abc", "**/**/abc/**", { dot = true }))
						assert(not isMatch("./abc", "**/**/abc/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("./abc", ".**", { dot = true }))
						assert(not isMatch("./abc", ".**/**", { dot = true }))
						assert(not isMatch("./abc", ".**/abc", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("./abc", "*.*/**", { dot = true }))
						assert(not isMatch("./abc", "*.*/abc", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("./abc", "**./**", { dot = true }))
						assert(not isMatch("./abc", "**./abc", { dot = true }))
					end)
				end)

				describe("should not match nested single-dots", function()
					it("with star", function()
						assert(not isMatch("/./abc", "*/*", { dot = true }))
						assert(not isMatch("/./abc", "/*/*", { dot = true }))
						assert(not isMatch("/./abc", "*/*/*", { dot = true }))
						assert(not isMatch("abc/./abc", "*/*/*", { dot = true }))
						assert(not isMatch("abc/./abc/abc", "*/*/*/*", { dot = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/./abc", "*/.*/*", { dot = true }))
						assert(not isMatch("/./abc", "/.*/*", { dot = true }))
						assert(not isMatch("/./abc", "*/*.*/*", { dot = true }))
						assert(not isMatch("/./abc", "/*.*/*", { dot = true }))
						assert(not isMatch("/./abc", "*/*./*", { dot = true }))
						assert(not isMatch("/./abc", "/*./*", { dot = true }))
						assert(not isMatch("abc/./abc", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/./abc", "*/*.*/*", { dot = true }))
						assert(not isMatch("abc/./abc", "*/*./*", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/./abc", "**", { dot = true }))
						assert(not isMatch("/./abc", "**/**", { dot = true }))
						assert(not isMatch("/./abc", "/**/**", { dot = true }))
						assert(not isMatch("/./abc", "**/**/**", { dot = true }))
						assert(not isMatch("abc/./abc", "**/**/**", { dot = true }))
						assert(not isMatch("abc/./abc/abc", "**/**/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/./abc", "**/.**/**", { dot = true }))
						assert(not isMatch("/./abc", "/.**/**", { dot = true }))
						assert(not isMatch("abc/./abc", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/./abc", "/.**/**", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/./abc", "**/**./**", { dot = true }))
						assert(not isMatch("/./abc", "/**./**", { dot = true }))
						assert(not isMatch("abc/./abc", "**/**./**", { dot = true }))
						assert(not isMatch("abc/./abc", "/**./**", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/./abc", "**/**.**/**", { dot = true }))
						assert(not isMatch("/./abc", "**/*.*/**", { dot = true }))
						assert(not isMatch("/./abc", "/**.**/**", { dot = true }))
						assert(not isMatch("/./abc", "/*.*/**", { dot = true }))
						assert(not isMatch("abc/./abc", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/./abc", "**/*.*/**", { dot = true }))
						assert(not isMatch("abc/./abc", "/**.**/**", { dot = true }))
						assert(not isMatch("abc/./abc", "/*.*/**", { dot = true }))
					end)
				end)

				describe("should not match trailing single-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/.", "*/*", { dot = true }))
						assert(not isMatch("abc/.", "*/*/", { dot = true }))
						assert(not isMatch("abc/.", "*/*/*", { dot = true }))
						assert(not isMatch("abc/./", "*/*", { dot = true }))
						assert(not isMatch("abc/./", "*/*/", { dot = true }))
						assert(not isMatch("abc/./", "*/*/*", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*/", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*/*/*/*", { dot = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/.", "*/.*", { dot = true }))
						assert(not isMatch("abc/.", "*/.*/", { dot = true }))
						assert(not isMatch("abc/.", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/./", "*/.*", { dot = true }))
						assert(not isMatch("abc/./", "*/.*/", { dot = true }))
						assert(not isMatch("abc/./", "*/.*/*", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*/", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/.*/*/.*/*", { dot = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/.", "*/*.", { dot = true }))
						assert(not isMatch("abc/.", "*/*./", { dot = true }))
						assert(not isMatch("abc/.", "*/*./*", { dot = true }))
						assert(not isMatch("abc/./", "*/*.", { dot = true }))
						assert(not isMatch("abc/./", "*/*./", { dot = true }))
						assert(not isMatch("abc/./", "*/*./*", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*.", { dot = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*./", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*./*/*./*", { dot = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/.", "**/**", { dot = true }))
						assert(not isMatch("abc/.", "**/**/", { dot = true }))
						assert(not isMatch("abc/.", "**/**/**", { dot = true }))
						assert(not isMatch("abc/./", "**/**", { dot = true }))
						assert(not isMatch("abc/./", "**/**/", { dot = true }))
						assert(not isMatch("abc/./", "**/**/**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**/", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**/**/**/**", { dot = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/.", "**/.**", { dot = true }))
						assert(not isMatch("abc/.", "**/.**/", { dot = true }))
						assert(not isMatch("abc/.", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/./", "**/.**", { dot = true }))
						assert(not isMatch("abc/./", "**/.**/", { dot = true }))
						assert(not isMatch("abc/./", "**/.**/**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**/", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/.**/**/.**/**", { dot = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/.", "**/**.**", { dot = true }))
						assert(not isMatch("abc/.", "**/**.**/", { dot = true }))
						assert(not isMatch("abc/.", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/./", "**/**.**", { dot = true }))
						assert(not isMatch("abc/./", "**/**.**/", { dot = true }))
						assert(not isMatch("abc/./", "**/**.**/**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**/", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**.**/**/.**/**", { dot = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/.", "**/**.", { dot = true }))
						assert(not isMatch("abc/.", "**/**./", { dot = true }))
						assert(not isMatch("abc/.", "**/**./**", { dot = true }))
						assert(not isMatch("abc/./", "**/**.", { dot = true }))
						assert(not isMatch("abc/./", "**/**./", { dot = true }))
						assert(not isMatch("abc/./", "**/**./**", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**.", { dot = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**./", { dot = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**./**/**./**", { dot = true }))
					end)
				end)
			end)

			describe("options = { strictSlashes: true }", function()
				describe("should not match leading single-dots", function()
					it("with single star", function()
						assert(not isMatch("./abc", "*/*", { strictSlashes = true }))
						assert(not isMatch("./abc", "*/abc", { strictSlashes = true }))
						assert(not isMatch("./abc", "*/abc/*", { strictSlashes = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("./abc", ".*/*", { strictSlashes = true }))
						assert(not isMatch("./abc", ".*/abc", { strictSlashes = true }))
						assert(not isMatch("./abc", "*./*", { strictSlashes = true }))
						assert(not isMatch("./abc", "*./abc", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("./abc", "**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**/**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/abc/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/abc/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("./abc", ".**", { strictSlashes = true }))
						assert(not isMatch("./abc", ".**/**", { strictSlashes = true }))
						assert(not isMatch("./abc", ".**/abc", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("./abc", "*.*/**", { strictSlashes = true }))
						assert(not isMatch("./abc", "*.*/abc", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("./abc", "**./**", { strictSlashes = true }))
						assert(not isMatch("./abc", "**./abc", { strictSlashes = true }))
					end)
				end)

				describe("should not match nested single-dots", function()
					it("with star", function()
						assert(not isMatch("/./abc", "*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc", "*/*/*/*", { strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/./abc", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/.*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*.*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/*.*/*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*./*", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/./abc", "**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "**/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/**/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc", "**/**/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/./abc", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/./abc", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/**./**", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/./abc", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "**/*.*/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/**.**/**", { strictSlashes = true }))
						assert(not isMatch("/./abc", "/*.*/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/*.*/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/*.*/**", { strictSlashes = true }))
					end)
				end)

				describe("should not match trailing single-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/.", "*/*", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*/", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*/*/*/*", { strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/.", "*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*/*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*/", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/.*/*/.*/*", { strictSlashes = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/.", "*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*./*", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*.", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*./", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*./*/*./*", { strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/.", "**/**", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**/", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**/**/**/**", { strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/.", "**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**/", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/.**/**/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/.", "**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**/**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**/", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**.**/**/.**/**", { strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/.", "**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**./**", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**.", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**./", { strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**./**/**./**", { strictSlashes = true }))
					end)
				end)
			end)

			describe("options = { dot: true, strictSlashes: true }", function()
				describe("should not match leading single-dots", function()
					it("with single star", function()
						assert(not isMatch("./abc", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "*/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "*/abc/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + single star", function()
						assert(not isMatch("./abc", ".*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", ".*/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "*./abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("./abc", "**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "abc/**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/abc/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/abc/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**/**/abc/**/**", { dot = true, strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("./abc", ".**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", ".**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", ".**/abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("./abc", "*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "*.*/abc", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("./abc", "**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("./abc", "**./abc", { dot = true, strictSlashes = true }))
					end)
				end)

				describe("should not match nested single-dots", function()
					it("with star", function()
						assert(not isMatch("/./abc", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc", "*/*/*/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("/./abc", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "*/*./*", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("/./abc", "**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc", "**/**/**/**", { dot = true, strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("/./abc", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/.**/**", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot", function()
						assert(not isMatch("/./abc", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/**./**", { dot = true, strictSlashes = true }))
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("/./abc", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "**/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("/./abc", "/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "**/*.*/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc", "/*.*/**", { dot = true, strictSlashes = true }))
					end)
				end)

				describe("should not match trailing single-dots", function()
					it("with single star", function()
						assert(not isMatch("abc/.", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*/*/*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*/*/*/*", { dot = true, strictSlashes = true }))
					end)

					it("with dot + star", function()
						assert(not isMatch("abc/.", "*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/.*/*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/.*/*/.*/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/.*/*/.*/*", { dot = true, strictSlashes = true }))
					end)

					it("with star + dot", function()
						assert(not isMatch("abc/.", "*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "*/*./*", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "*/*./*/*./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "*/*./*/*./*", { dot = true, strictSlashes = true }))
					end)

					it("with globstar", function()
						assert(not isMatch("abc/.", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**/**/**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/abc/./", "**/**/**/**/**", { dot = true, strictSlashes = true }))
					end)

					it("with dot + globstar", function()
						assert(not isMatch("abc/.", "**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/.**/**/.**/", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/./abc/abc/./", "**/.**/**/.**/**", { dot = true, strictSlashes = true })
						)
					end)

					it("with globstar + dot + globstar", function()
						assert(not isMatch("abc/.", "**/**.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**/", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.**/**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**.**/**/**.**/", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/./abc/abc/./", "**/**.**/**/.**/**", { dot = true, strictSlashes = true })
						)
					end)

					it("with globstar + dot", function()
						assert(not isMatch("abc/.", "**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/.", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**./", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./", "**/**./**", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**.", { dot = true, strictSlashes = true }))
						assert(not isMatch("abc/./abc/./", "**/**./**/**./", { dot = true, strictSlashes = true }))
						assert(
							not isMatch("abc/./abc/abc/./", "**/**./**/**./**", { dot = true, strictSlashes = true })
						)
					end)
				end)
			end)
		end)
	end)
end
