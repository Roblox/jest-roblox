-- ROBLOX upstream: https://github.com/micromatch/picomatch/tree/2.3.1/test/extglobs-temp.js

return function()
	local CurrentModule = script.Parent
	local PicomatchModule = CurrentModule.Parent

	local support = require(CurrentModule.support)
	local isMatch = require(PicomatchModule).isMatch
	--[[*
	 * Some of tests were converted from bash 4.3, 4.4, and minimatch unit tests.
	 * This is called "temp" as a reminder to reorganize these test and remove duplicates.
	 ]]
	describe("extglobs", function()
		beforeEach(function()
			return support.windowsPathSep()
		end)
		afterEach(function()
			return support.resetPathSep()
		end)

		describe("bash", function()
			it("should match extended globs from the bash spec:", function()
				assert(isMatch("bar", "!(foo)"))
				assert(isMatch("f", "!(foo)"))
				assert(isMatch("fa", "!(foo)"))
				assert(isMatch("fb", "!(foo)"))
				assert(isMatch("ff", "!(foo)"))
				assert(isMatch("fff", "!(foo)"))
				assert(isMatch("fo", "!(foo)"))
				assert(not isMatch("foo", "!(foo)"))
				assert(not isMatch("foo/bar", "!(foo)"))
				assert(not isMatch("foo/bar", "!(foo)/*"))
				assert(isMatch("foobar", "!(foo)"))
				assert(isMatch("foot", "!(foo)"))
				assert(isMatch("foox", "!(foo)"))
				assert(isMatch("o", "!(foo)"))
				assert(isMatch("of", "!(foo)"))
				assert(isMatch("ooo", "!(foo)"))
				assert(isMatch("ox", "!(foo)"))
				assert(isMatch("x", "!(foo)"))
				assert(isMatch("xx", "!(foo)"))
				assert(not isMatch("bar", "!(!(foo))"))
				assert(not isMatch("f", "!(!(foo))"))
				assert(not isMatch("fa", "!(!(foo))"))
				assert(not isMatch("fb", "!(!(foo))"))
				assert(not isMatch("ff", "!(!(foo))"))
				assert(not isMatch("fff", "!(!(foo))"))
				assert(not isMatch("fo", "!(!(foo))"))
				assert(isMatch("foo", "!(!(foo))"))
				assert(isMatch("foo/bar", "!(!(bar)/baz)"))
				assert(not isMatch("foo/bar", "!(!(foo))"))
				assert(not isMatch("foobar", "!(!(foo))"))
				assert(not isMatch("foot", "!(!(foo))"))
				assert(not isMatch("foox", "!(!(foo))"))
				assert(not isMatch("o", "!(!(foo))"))
				assert(not isMatch("of", "!(!(foo))"))
				assert(not isMatch("ooo", "!(!(foo))"))
				assert(not isMatch("ox", "!(!(foo))"))
				assert(not isMatch("x", "!(!(foo))"))
				assert(not isMatch("xx", "!(!(foo))"))
				assert(isMatch("bar", "!(!(!(foo)))"))
				assert(isMatch("f", "!(!(!(foo)))"))
				assert(isMatch("fa", "!(!(!(foo)))"))
				assert(isMatch("fb", "!(!(!(foo)))"))
				assert(isMatch("ff", "!(!(!(foo)))"))
				assert(isMatch("fff", "!(!(!(foo)))"))
				assert(isMatch("fo", "!(!(!(foo)))"))
				assert(not isMatch("foo", "!(!(!(foo)))"))
				assert(not isMatch("foo/bar", "!(!(!(foo)))"))
				assert(isMatch("foobar", "!(!(!(foo)))"))
				assert(isMatch("foot", "!(!(!(foo)))"))
				assert(isMatch("foox", "!(!(!(foo)))"))
				assert(isMatch("o", "!(!(!(foo)))"))
				assert(isMatch("of", "!(!(!(foo)))"))
				assert(isMatch("ooo", "!(!(!(foo)))"))
				assert(isMatch("ox", "!(!(!(foo)))"))
				assert(isMatch("x", "!(!(!(foo)))"))
				assert(isMatch("xx", "!(!(!(foo)))"))
				assert(not isMatch("bar", "!(!(!(!(foo))))"))
				assert(not isMatch("f", "!(!(!(!(foo))))"))
				assert(not isMatch("fa", "!(!(!(!(foo))))"))
				assert(not isMatch("fb", "!(!(!(!(foo))))"))
				assert(not isMatch("ff", "!(!(!(!(foo))))"))
				assert(not isMatch("fff", "!(!(!(!(foo))))"))
				assert(not isMatch("fo", "!(!(!(!(foo))))"))
				assert(isMatch("foo", "!(!(!(!(foo))))"))
				assert(not isMatch("foo/bar", "!(!(!(!(foo))))"))
				assert(not isMatch("foot", "!(!(!(!(foo))))"))
				assert(not isMatch("o", "!(!(!(!(foo))))"))
				assert(not isMatch("of", "!(!(!(!(foo))))"))
				assert(not isMatch("ooo", "!(!(!(!(foo))))"))
				assert(not isMatch("ox", "!(!(!(!(foo))))"))
				assert(not isMatch("x", "!(!(!(!(foo))))"))
				assert(not isMatch("xx", "!(!(!(!(foo))))"))
				assert(not isMatch("bar", "!(!(foo))*"))
				assert(not isMatch("f", "!(!(foo))*"))
				assert(not isMatch("fa", "!(!(foo))*"))
				assert(not isMatch("fb", "!(!(foo))*"))
				assert(not isMatch("ff", "!(!(foo))*"))
				assert(not isMatch("fff", "!(!(foo))*"))
				assert(not isMatch("fo", "!(!(foo))*"))
				assert(isMatch("foo", "!(!(foo))*"))
				assert(isMatch("foobar", "!(!(foo))*"))
				assert(isMatch("foot", "!(!(foo))*"))
				assert(isMatch("foox", "!(!(foo))*"))
				assert(not isMatch("o", "!(!(foo))*"))
				assert(not isMatch("of", "!(!(foo))*"))
				assert(not isMatch("ooo", "!(!(foo))*"))
				assert(not isMatch("ox", "!(!(foo))*"))
				assert(not isMatch("x", "!(!(foo))*"))
				assert(not isMatch("xx", "!(!(foo))*"))
				assert(isMatch("bar", "!(f!(o))"))
				assert(not isMatch("f", "!(f!(o))"))
				assert(not isMatch("fa", "!(f!(o))"))
				assert(not isMatch("fb", "!(f!(o))"))
				assert(not isMatch("ff", "!(f!(o))"))
				assert(not isMatch("fff", "!(f!(o))"))
				assert(isMatch("fo", "!(f!(o))"))
				assert(isMatch("foo", "!(!(foo))"))
				assert(not isMatch("foo", "!(f)!(o)!(o)"))
				assert(isMatch("foo", "!(fo)"))
				assert(isMatch("foo", "!(f!(o)*)"))
				assert(not isMatch("foo", "!(f!(o))"))
				assert(not isMatch("foo/bar", "!(f!(o))"))
				assert(not isMatch("foobar", "!(f!(o))"))
				assert(isMatch("o", "!(f!(o))"))
				assert(isMatch("of", "!(f!(o))"))
				assert(isMatch("ooo", "!(f!(o))"))
				assert(isMatch("ox", "!(f!(o))"))
				assert(isMatch("x", "!(f!(o))"))
				assert(isMatch("xx", "!(f!(o))"))
				assert(isMatch("bar", "!(f(o))"))
				assert(isMatch("f", "!(f(o))"))
				assert(isMatch("fa", "!(f(o))"))
				assert(isMatch("fb", "!(f(o))"))
				assert(isMatch("ff", "!(f(o))"))
				assert(isMatch("fff", "!(f(o))"))
				assert(not isMatch("fo", "!(f(o))"))
				assert(isMatch("foo", "!(f(o))"))
				assert(not isMatch("foo/bar", "!(f(o))"))
				assert(isMatch("foobar", "!(f(o))"))
				assert(isMatch("foot", "!(f(o))"))
				assert(isMatch("foox", "!(f(o))"))
				assert(isMatch("o", "!(f(o))"))
				assert(isMatch("of", "!(f(o))"))
				assert(isMatch("ooo", "!(f(o))"))
				assert(isMatch("ox", "!(f(o))"))
				assert(isMatch("x", "!(f(o))"))
				assert(isMatch("xx", "!(f(o))"))
				assert(isMatch("bar", "!(f)"))
				assert(not isMatch("f", "!(f)"))
				assert(isMatch("fa", "!(f)"))
				assert(isMatch("fb", "!(f)"))
				assert(isMatch("ff", "!(f)"))
				assert(isMatch("fff", "!(f)"))
				assert(isMatch("fo", "!(f)"))
				assert(isMatch("foo", "!(f)"))
				assert(not isMatch("foo/bar", "!(f)"))
				assert(isMatch("foobar", "!(f)"))
				assert(isMatch("foot", "!(f)"))
				assert(isMatch("foox", "!(f)"))
				assert(isMatch("o", "!(f)"))
				assert(isMatch("of", "!(f)"))
				assert(isMatch("ooo", "!(f)"))
				assert(isMatch("ox", "!(f)"))
				assert(isMatch("x", "!(f)"))
				assert(isMatch("xx", "!(f)"))
				assert(isMatch("bar", "!(f)"))
				assert(not isMatch("f", "!(f)"))
				assert(isMatch("fa", "!(f)"))
				assert(isMatch("fb", "!(f)"))
				assert(isMatch("ff", "!(f)"))
				assert(isMatch("fff", "!(f)"))
				assert(isMatch("fo", "!(f)"))
				assert(isMatch("foo", "!(f)"))
				assert(not isMatch("foo/bar", "!(f)"))
				assert(isMatch("foobar", "!(f)"))
				assert(isMatch("foot", "!(f)"))
				assert(isMatch("foox", "!(f)"))
				assert(isMatch("o", "!(f)"))
				assert(isMatch("of", "!(f)"))
				assert(isMatch("ooo", "!(f)"))
				assert(isMatch("ox", "!(f)"))
				assert(isMatch("x", "!(f)"))
				assert(isMatch("xx", "!(f)"))
				assert(isMatch("bar", "!(foo)"))
				assert(isMatch("f", "!(foo)"))
				assert(isMatch("fa", "!(foo)"))
				assert(isMatch("fb", "!(foo)"))
				assert(isMatch("ff", "!(foo)"))
				assert(isMatch("fff", "!(foo)"))
				assert(isMatch("fo", "!(foo)"))
				assert(not isMatch("foo", "!(foo)"))
				assert(not isMatch("foo/bar", "!(foo)"))
				assert(isMatch("foobar", "!(foo)"))
				assert(isMatch("foot", "!(foo)"))
				assert(isMatch("foox", "!(foo)"))
				assert(isMatch("o", "!(foo)"))
				assert(isMatch("of", "!(foo)"))
				assert(isMatch("ooo", "!(foo)"))
				assert(isMatch("ox", "!(foo)"))
				assert(isMatch("x", "!(foo)"))
				assert(isMatch("xx", "!(foo)"))
				assert(isMatch("bar", "!(foo)*"))
				assert(isMatch("f", "!(foo)*"))
				assert(isMatch("fa", "!(foo)*"))
				assert(isMatch("fb", "!(foo)*"))
				assert(isMatch("ff", "!(foo)*"))
				assert(isMatch("fff", "!(foo)*"))
				assert(isMatch("fo", "!(foo)*"))
				assert(not isMatch("foo", "!(foo)*"))
				assert(not isMatch("foo/bar", "!(foo)*"))
				assert(not isMatch("foobar", "!(foo)*"))
				assert(not isMatch("foot", "!(foo)*"))
				assert(not isMatch("foox", "!(foo)*"))
				assert(isMatch("o", "!(foo)*"))
				assert(isMatch("of", "!(foo)*"))
				assert(isMatch("ooo", "!(foo)*"))
				assert(isMatch("ox", "!(foo)*"))
				assert(isMatch("x", "!(foo)*"))
				assert(isMatch("xx", "!(foo)*"))
				assert(isMatch("bar", "!(x)"))
				assert(isMatch("f", "!(x)"))
				assert(isMatch("fa", "!(x)"))
				assert(isMatch("fb", "!(x)"))
				assert(isMatch("ff", "!(x)"))
				assert(isMatch("fff", "!(x)"))
				assert(isMatch("fo", "!(x)"))
				assert(isMatch("foo", "!(x)"))
				assert(not isMatch("foo/bar", "!(x)"))
				assert(isMatch("foobar", "!(x)"))
				assert(isMatch("foot", "!(x)"))
				assert(isMatch("foox", "!(x)"))
				assert(isMatch("o", "!(x)"))
				assert(isMatch("of", "!(x)"))
				assert(isMatch("ooo", "!(x)"))
				assert(isMatch("ox", "!(x)"))
				assert(not isMatch("x", "!(x)"))
				assert(isMatch("xx", "!(x)"))
				assert(isMatch("bar", "!(x)*"))
				assert(isMatch("f", "!(x)*"))
				assert(isMatch("fa", "!(x)*"))
				assert(isMatch("fb", "!(x)*"))
				assert(isMatch("ff", "!(x)*"))
				assert(isMatch("fff", "!(x)*"))
				assert(isMatch("fo", "!(x)*"))
				assert(isMatch("foo", "!(x)*"))
				assert(not isMatch("foo/bar", "!(x)*"))
				assert(isMatch("foobar", "!(x)*"))
				assert(isMatch("foot", "!(x)*"))
				assert(isMatch("foox", "!(x)*"))
				assert(isMatch("o", "!(x)*"))
				assert(isMatch("of", "!(x)*"))
				assert(isMatch("ooo", "!(x)*"))
				assert(isMatch("ox", "!(x)*"))
				assert(not isMatch("x", "!(x)*"))
				assert(not isMatch("xx", "!(x)*"))
				-- ROBLOX FIXME: hangs test
				-- assert(isMatch("bar", "*(!(f))"))
				assert(not isMatch("f", "*(!(f))"))
				-- ROBLOX FIXME START: hangs test
				-- assert(isMatch("fa", "*(!(f))"))
				-- assert(isMatch("fb", "*(!(f))"))
				-- assert(isMatch("ff", "*(!(f))"))
				-- assert(isMatch("fff", "*(!(f))"))
				-- assert(isMatch("fo", "*(!(f))"))
				-- assert(isMatch("foo", "*(!(f))"))
				-- assert(not isMatch("foo/bar", "*(!(f))"))
				-- assert(isMatch("foobar", "*(!(f))"))
				-- assert(isMatch("foot", "*(!(f))"))
				-- assert(isMatch("foox", "*(!(f))"))
				-- assert(isMatch("o", "*(!(f))"))
				-- assert(isMatch("of", "*(!(f))"))
				-- assert(isMatch("ooo", "*(!(f))"))
				-- assert(isMatch("ox", "*(!(f))"))
				-- assert(isMatch("x", "*(!(f))"))
				-- assert(isMatch("xx", "*(!(f))"))
				-- ROBLOX FIXME END
				assert(not isMatch("bar", "*((foo))"))
				assert(not isMatch("f", "*((foo))"))
				assert(not isMatch("fa", "*((foo))"))
				assert(not isMatch("fb", "*((foo))"))
				assert(not isMatch("ff", "*((foo))"))
				assert(not isMatch("fff", "*((foo))"))
				assert(not isMatch("fo", "*((foo))"))
				assert(isMatch("foo", "*((foo))"))
				assert(not isMatch("foo/bar", "*((foo))"))
				assert(not isMatch("foobar", "*((foo))"))
				assert(not isMatch("foot", "*((foo))"))
				assert(not isMatch("foox", "*((foo))"))
				assert(not isMatch("o", "*((foo))"))
				assert(not isMatch("of", "*((foo))"))
				assert(not isMatch("ooo", "*((foo))"))
				assert(not isMatch("ox", "*((foo))"))
				assert(not isMatch("x", "*((foo))"))
				assert(not isMatch("xx", "*((foo))"))
				-- ROBLOX FIXME: hangs test
				-- assert(isMatch("bar", "+(!(f))"))
				assert(not isMatch("f", "+(!(f))"))
				-- ROBLOX FIXME START: hangs test
				-- assert(isMatch("fa", "+(!(f))"))
				-- assert(isMatch("fb", "+(!(f))"))
				-- assert(isMatch("ff", "+(!(f))"))
				-- assert(isMatch("fff", "+(!(f))"))
				-- assert(isMatch("fo", "+(!(f))"))
				-- assert(isMatch("foo", "+(!(f))"))
				-- assert(not isMatch("foo/bar", "+(!(f))"))
				-- assert(isMatch("foobar", "+(!(f))"))
				-- assert(isMatch("foot", "+(!(f))"))
				-- assert(isMatch("foox", "+(!(f))"))
				-- assert(isMatch("o", "+(!(f))"))
				-- assert(isMatch("of", "+(!(f))"))
				-- assert(isMatch("ooo", "+(!(f))"))
				-- assert(isMatch("ox", "+(!(f))"))
				-- assert(isMatch("x", "+(!(f))"))
				-- assert(isMatch("xx", "+(!(f))"))
				-- ROBLOX FIXME END
				assert(isMatch("bar", "@(!(z*)|*x)"))
				assert(isMatch("f", "@(!(z*)|*x)"))
				assert(isMatch("fa", "@(!(z*)|*x)"))
				assert(isMatch("fb", "@(!(z*)|*x)"))
				assert(isMatch("ff", "@(!(z*)|*x)"))
				assert(isMatch("fff", "@(!(z*)|*x)"))
				assert(isMatch("fo", "@(!(z*)|*x)"))
				assert(isMatch("foo", "@(!(z*)|*x)"))
				assert(isMatch("foo/bar", "@(!(z*/*)|*x)"))
				assert(not isMatch("foo/bar", "@(!(z*)|*x)"))
				assert(isMatch("foobar", "@(!(z*)|*x)"))
				assert(isMatch("foot", "@(!(z*)|*x)"))
				assert(isMatch("foox", "@(!(z*)|*x)"))
				assert(isMatch("o", "@(!(z*)|*x)"))
				assert(isMatch("of", "@(!(z*)|*x)"))
				assert(isMatch("ooo", "@(!(z*)|*x)"))
				assert(isMatch("ox", "@(!(z*)|*x)"))
				assert(isMatch("x", "@(!(z*)|*x)"))
				assert(isMatch("xx", "@(!(z*)|*x)"))
				assert(not isMatch("bar", "foo/!(foo)"))
				assert(not isMatch("f", "foo/!(foo)"))
				assert(not isMatch("fa", "foo/!(foo)"))
				assert(not isMatch("fb", "foo/!(foo)"))
				assert(not isMatch("ff", "foo/!(foo)"))
				assert(not isMatch("fff", "foo/!(foo)"))
				assert(not isMatch("fo", "foo/!(foo)"))
				assert(not isMatch("foo", "foo/!(foo)"))
				assert(isMatch("foo/bar", "foo/!(foo)"))
				assert(not isMatch("foobar", "foo/!(foo)"))
				assert(not isMatch("foot", "foo/!(foo)"))
				assert(not isMatch("foox", "foo/!(foo)"))
				assert(not isMatch("o", "foo/!(foo)"))
				assert(not isMatch("of", "foo/!(foo)"))
				assert(not isMatch("ooo", "foo/!(foo)"))
				assert(not isMatch("ox", "foo/!(foo)"))
				assert(not isMatch("x", "foo/!(foo)"))
				assert(not isMatch("xx", "foo/!(foo)"))
				assert(not isMatch("ffffffo", "(foo)bb"))
				assert(not isMatch("fffooofoooooffoofffooofff", "(foo)bb"))
				assert(not isMatch("ffo", "(foo)bb"))
				assert(not isMatch("fofo", "(foo)bb"))
				assert(not isMatch("fofoofoofofoo", "(foo)bb"))
				assert(not isMatch("foo", "(foo)bb"))
				assert(not isMatch("foob", "(foo)bb"))
				assert(isMatch("foobb", "(foo)bb"))
				assert(not isMatch("foofoofo", "(foo)bb"))
				assert(not isMatch("fooofoofofooo", "(foo)bb"))
				assert(not isMatch("foooofo", "(foo)bb"))
				assert(not isMatch("foooofof", "(foo)bb"))
				assert(not isMatch("foooofofx", "(foo)bb"))
				assert(not isMatch("foooxfooxfoxfooox", "(foo)bb"))
				assert(not isMatch("foooxfooxfxfooox", "(foo)bb"))
				assert(not isMatch("foooxfooxofoxfooox", "(foo)bb"))
				assert(not isMatch("foot", "(foo)bb"))
				assert(not isMatch("foox", "(foo)bb"))
				assert(not isMatch("ofoofo", "(foo)bb"))
				assert(not isMatch("ofooofoofofooo", "(foo)bb"))
				assert(not isMatch("ofoooxoofxo", "(foo)bb"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "(foo)bb"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "(foo)bb"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "(foo)bb"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "(foo)bb"))
				assert(not isMatch("ofxoofxo", "(foo)bb"))
				assert(not isMatch("oofooofo", "(foo)bb"))
				assert(not isMatch("ooo", "(foo)bb"))
				assert(not isMatch("oxfoxfox", "(foo)bb"))
				assert(not isMatch("oxfoxoxfox", "(foo)bb"))
				assert(not isMatch("xfoooofof", "(foo)bb"))
				-- ROBLOX FIXME: hangs test
				-- assert(isMatch("ffffffo", "*(*(f)*(o))"))
				-- assert(isMatch("fffooofoooooffoofffooofff", "*(*(f)*(o))"))
				-- assert(isMatch("ffo", "*(*(f)*(o))"))
				-- assert(isMatch("fofo", "*(*(f)*(o))"))
				-- assert(isMatch("fofoofoofofoo", "*(*(f)*(o))"))
				-- assert(isMatch("foo", "*(*(f)*(o))"))
				-- assert(not isMatch("foob", "*(*(f)*(o))"))
				-- assert(not isMatch("foobb", "*(*(f)*(o))"))
				-- assert(isMatch("foofoofo", "*(*(f)*(o))"))
				-- assert(isMatch("fooofoofofooo", "*(*(f)*(o))"))
				-- assert(isMatch("foooofo", "*(*(f)*(o))"))
				-- assert(isMatch("foooofof", "*(*(f)*(o))"))
				-- assert(not isMatch("foooofofx", "*(*(f)*(o))"))
				-- assert(not isMatch("foooxfooxfoxfooox", "*(*(f)*(o))"))
				-- assert(not isMatch("foooxfooxfxfooox", "*(*(f)*(o))"))
				-- assert(not isMatch("foooxfooxofoxfooox", "*(*(f)*(o))"))
				-- assert(not isMatch("foot", "*(*(f)*(o))"))
				-- assert(not isMatch("foox", "*(*(f)*(o))"))
				-- assert(isMatch("ofoofo", "*(*(f)*(o))"))
				-- assert(isMatch("ofooofoofofooo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofoooxoofxo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(*(f)*(o))"))
				-- assert(not isMatch("ofxoofxo", "*(*(f)*(o))"))
				-- assert(isMatch("oofooofo", "*(*(f)*(o))"))
				-- assert(isMatch("ooo", "*(*(f)*(o))"))
				-- assert(not isMatch("oxfoxfox", "*(*(f)*(o))"))
				-- assert(not isMatch("oxfoxoxfox", "*(*(f)*(o))"))
				-- assert(not isMatch("xfoooofof", "*(*(f)*(o))"))
				-- ROBLOX FIXME END
				assert(not isMatch("ffffffo", "*(*(of*(o)x)o)"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(*(of*(o)x)o)"))
				assert(not isMatch("ffo", "*(*(of*(o)x)o)"))
				assert(not isMatch("fofo", "*(*(of*(o)x)o)"))
				assert(not isMatch("fofoofoofofoo", "*(*(of*(o)x)o)"))
				assert(not isMatch("foo", "*(*(of*(o)x)o)"))
				assert(not isMatch("foob", "*(*(of*(o)x)o)"))
				assert(not isMatch("foobb", "*(*(of*(o)x)o)"))
				assert(not isMatch("foofoofo", "*(*(of*(o)x)o)"))
				assert(not isMatch("fooofoofofooo", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooofo", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooofof", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooofofx", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooxfooxfoxfooox", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooxfooxfxfooox", "*(*(of*(o)x)o)"))
				assert(not isMatch("foooxfooxofoxfooox", "*(*(of*(o)x)o)"))
				assert(not isMatch("foot", "*(*(of*(o)x)o)"))
				assert(not isMatch("foox", "*(*(of*(o)x)o)"))
				assert(not isMatch("ofoofo", "*(*(of*(o)x)o)"))
				assert(not isMatch("ofooofoofofooo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxo", "*(*(of*(o)x)o)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxoo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofxoofxo", "*(*(of*(o)x)o)"))
				assert(not isMatch("oofooofo", "*(*(of*(o)x)o)"))
				assert(isMatch("ooo", "*(*(of*(o)x)o)"))
				assert(not isMatch("oxfoxfox", "*(*(of*(o)x)o)"))
				assert(not isMatch("oxfoxoxfox", "*(*(of*(o)x)o)"))
				assert(not isMatch("xfoooofof", "*(*(of*(o)x)o)"))
				assert(isMatch("ffffffo", "*(f*(o))"))
				assert(isMatch("fffooofoooooffoofffooofff", "*(f*(o))"))
				assert(isMatch("ffo", "*(f*(o))"))
				assert(isMatch("fofo", "*(f*(o))"))
				assert(isMatch("fofoofoofofoo", "*(f*(o))"))
				assert(isMatch("foo", "*(f*(o))"))
				assert(not isMatch("foob", "*(f*(o))"))
				assert(not isMatch("foobb", "*(f*(o))"))
				assert(isMatch("foofoofo", "*(f*(o))"))
				assert(isMatch("fooofoofofooo", "*(f*(o))"))
				assert(isMatch("foooofo", "*(f*(o))"))
				assert(isMatch("foooofof", "*(f*(o))"))
				assert(not isMatch("foooofofx", "*(f*(o))"))
				assert(not isMatch("foooxfooxfoxfooox", "*(f*(o))"))
				assert(not isMatch("foooxfooxfxfooox", "*(f*(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(f*(o))"))
				assert(not isMatch("foot", "*(f*(o))"))
				assert(not isMatch("foox", "*(f*(o))"))
				assert(not isMatch("ofoofo", "*(f*(o))"))
				assert(not isMatch("ofooofoofofooo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(f*(o))"))
				assert(not isMatch("ofxoofxo", "*(f*(o))"))
				assert(not isMatch("oofooofo", "*(f*(o))"))
				assert(not isMatch("ooo", "*(f*(o))"))
				assert(not isMatch("oxfoxfox", "*(f*(o))"))
				assert(not isMatch("oxfoxoxfox", "*(f*(o))"))
				assert(not isMatch("xfoooofof", "*(f*(o))"))
				assert(not isMatch("ffffffo", "*(f*(o)x)"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(f*(o)x)"))
				assert(not isMatch("ffo", "*(f*(o)x)"))
				assert(not isMatch("fofo", "*(f*(o)x)"))
				assert(not isMatch("fofoofoofofoo", "*(f*(o)x)"))
				assert(not isMatch("foo", "*(f*(o)x)"))
				assert(not isMatch("foob", "*(f*(o)x)"))
				assert(not isMatch("foobb", "*(f*(o)x)"))
				assert(not isMatch("foofoofo", "*(f*(o)x)"))
				assert(not isMatch("fooofoofofooo", "*(f*(o)x)"))
				assert(not isMatch("foooofo", "*(f*(o)x)"))
				assert(not isMatch("foooofof", "*(f*(o)x)"))
				assert(not isMatch("foooofofx", "*(f*(o)x)"))
				assert(isMatch("foooxfooxfoxfooox", "*(f*(o)x)"))
				assert(isMatch("foooxfooxfxfooox", "*(f*(o)x)"))
				assert(not isMatch("foooxfooxofoxfooox", "*(f*(o)x)"))
				assert(not isMatch("foot", "*(f*(o)x)"))
				assert(isMatch("foox", "*(f*(o)x)"))
				assert(not isMatch("ofoofo", "*(f*(o)x)"))
				assert(not isMatch("ofooofoofofooo", "*(f*(o)x)"))
				assert(not isMatch("ofoooxoofxo", "*(f*(o)x)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(f*(o)x)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(f*(o)x)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(f*(o)x)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(f*(o)x)"))
				assert(not isMatch("ofxoofxo", "*(f*(o)x)"))
				assert(not isMatch("oofooofo", "*(f*(o)x)"))
				assert(not isMatch("ooo", "*(f*(o)x)"))
				assert(not isMatch("oxfoxfox", "*(f*(o)x)"))
				assert(not isMatch("oxfoxoxfox", "*(f*(o)x)"))
				assert(not isMatch("xfoooofof", "*(f*(o)x)"))
				assert(not isMatch("ffffffo", "*(f+(o))"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(f+(o))"))
				assert(not isMatch("ffo", "*(f+(o))"))
				assert(isMatch("fofo", "*(f+(o))"))
				assert(isMatch("fofoofoofofoo", "*(f+(o))"))
				assert(isMatch("foo", "*(f+(o))"))
				assert(not isMatch("foob", "*(f+(o))"))
				assert(not isMatch("foobb", "*(f+(o))"))
				assert(isMatch("foofoofo", "*(f+(o))"))
				assert(isMatch("fooofoofofooo", "*(f+(o))"))
				assert(isMatch("foooofo", "*(f+(o))"))
				assert(not isMatch("foooofof", "*(f+(o))"))
				assert(not isMatch("foooofofx", "*(f+(o))"))
				assert(not isMatch("foooxfooxfoxfooox", "*(f+(o))"))
				assert(not isMatch("foooxfooxfxfooox", "*(f+(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(f+(o))"))
				assert(not isMatch("foot", "*(f+(o))"))
				assert(not isMatch("foox", "*(f+(o))"))
				assert(not isMatch("ofoofo", "*(f+(o))"))
				assert(not isMatch("ofooofoofofooo", "*(f+(o))"))
				assert(not isMatch("ofoooxoofxo", "*(f+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(f+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(f+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(f+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(f+(o))"))
				assert(not isMatch("ofxoofxo", "*(f+(o))"))
				assert(not isMatch("oofooofo", "*(f+(o))"))
				assert(not isMatch("ooo", "*(f+(o))"))
				assert(not isMatch("oxfoxfox", "*(f+(o))"))
				assert(not isMatch("oxfoxoxfox", "*(f+(o))"))
				assert(not isMatch("xfoooofof", "*(f+(o))"))
				assert(not isMatch("ffffffo", "*(of+(o))"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(of+(o))"))
				assert(not isMatch("ffo", "*(of+(o))"))
				assert(not isMatch("fofo", "*(of+(o))"))
				assert(not isMatch("fofoofoofofoo", "*(of+(o))"))
				assert(not isMatch("foo", "*(of+(o))"))
				assert(not isMatch("foob", "*(of+(o))"))
				assert(not isMatch("foobb", "*(of+(o))"))
				assert(not isMatch("foofoofo", "*(of+(o))"))
				assert(not isMatch("fooofoofofooo", "*(of+(o))"))
				assert(not isMatch("foooofo", "*(of+(o))"))
				assert(not isMatch("foooofof", "*(of+(o))"))
				assert(not isMatch("foooofofx", "*(of+(o))"))
				assert(not isMatch("foooxfooxfoxfooox", "*(of+(o))"))
				assert(not isMatch("foooxfooxfxfooox", "*(of+(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(of+(o))"))
				assert(not isMatch("foot", "*(of+(o))"))
				assert(not isMatch("foox", "*(of+(o))"))
				assert(isMatch("ofoofo", "*(of+(o))"))
				assert(not isMatch("ofooofoofofooo", "*(of+(o))"))
				assert(not isMatch("ofoooxoofxo", "*(of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(of+(o))"))
				assert(not isMatch("ofxoofxo", "*(of+(o))"))
				assert(not isMatch("oofooofo", "*(of+(o))"))
				assert(not isMatch("ooo", "*(of+(o))"))
				assert(not isMatch("oxfoxfox", "*(of+(o))"))
				assert(not isMatch("oxfoxoxfox", "*(of+(o))"))
				assert(not isMatch("xfoooofof", "*(of+(o))"))
				assert(not isMatch("ffffffo", "*(of+(o)|f)"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(of+(o)|f)"))
				assert(not isMatch("ffo", "*(of+(o)|f)"))
				assert(isMatch("fofo", "*(of+(o)|f)"))
				assert(isMatch("fofoofoofofoo", "*(of+(o)|f)"))
				assert(not isMatch("foo", "*(of+(o)|f)"))
				assert(not isMatch("foob", "*(of+(o)|f)"))
				assert(not isMatch("foobb", "*(of+(o)|f)"))
				assert(not isMatch("foofoofo", "*(of+(o)|f)"))
				assert(not isMatch("fooofoofofooo", "*(of+(o)|f)"))
				assert(not isMatch("foooofo", "*(of+(o)|f)"))
				assert(not isMatch("foooofof", "*(of+(o)|f)"))
				assert(not isMatch("foooofofx", "*(of+(o)|f)"))
				assert(not isMatch("foooxfooxfoxfooox", "*(of+(o)|f)"))
				assert(not isMatch("foooxfooxfxfooox", "*(of+(o)|f)"))
				assert(not isMatch("foooxfooxofoxfooox", "*(of+(o)|f)"))
				assert(not isMatch("foot", "*(of+(o)|f)"))
				assert(not isMatch("foox", "*(of+(o)|f)"))
				assert(isMatch("ofoofo", "*(of+(o)|f)"))
				assert(isMatch("ofooofoofofooo", "*(of+(o)|f)"))
				assert(not isMatch("ofoooxoofxo", "*(of+(o)|f)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(of+(o)|f)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(of+(o)|f)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(of+(o)|f)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(of+(o)|f)"))
				assert(not isMatch("ofxoofxo", "*(of+(o)|f)"))
				assert(not isMatch("oofooofo", "*(of+(o)|f)"))
				assert(not isMatch("ooo", "*(of+(o)|f)"))
				assert(not isMatch("oxfoxfox", "*(of+(o)|f)"))
				assert(not isMatch("oxfoxoxfox", "*(of+(o)|f)"))
				assert(not isMatch("xfoooofof", "*(of+(o)|f)"))
				assert(not isMatch("ffffffo", "*(of|oof+(o))"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(of|oof+(o))"))
				assert(not isMatch("ffo", "*(of|oof+(o))"))
				assert(not isMatch("fofo", "*(of|oof+(o))"))
				assert(not isMatch("fofoofoofofoo", "*(of|oof+(o))"))
				assert(not isMatch("foo", "*(of|oof+(o))"))
				assert(not isMatch("foob", "*(of|oof+(o))"))
				assert(not isMatch("foobb", "*(of|oof+(o))"))
				assert(not isMatch("foofoofo", "*(of|oof+(o))"))
				assert(not isMatch("fooofoofofooo", "*(of|oof+(o))"))
				assert(not isMatch("foooofo", "*(of|oof+(o))"))
				assert(not isMatch("foooofof", "*(of|oof+(o))"))
				assert(not isMatch("foooofofx", "*(of|oof+(o))"))
				assert(not isMatch("foooxfooxfoxfooox", "*(of|oof+(o))"))
				assert(not isMatch("foooxfooxfxfooox", "*(of|oof+(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(of|oof+(o))"))
				assert(not isMatch("foot", "*(of|oof+(o))"))
				assert(not isMatch("foox", "*(of|oof+(o))"))
				assert(isMatch("ofoofo", "*(of|oof+(o))"))
				assert(not isMatch("ofooofoofofooo", "*(of|oof+(o))"))
				assert(not isMatch("ofoooxoofxo", "*(of|oof+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(of|oof+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(of|oof+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(of|oof+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(of|oof+(o))"))
				assert(not isMatch("ofxoofxo", "*(of|oof+(o))"))
				assert(isMatch("oofooofo", "*(of|oof+(o))"))
				assert(not isMatch("ooo", "*(of|oof+(o))"))
				assert(not isMatch("oxfoxfox", "*(of|oof+(o))"))
				assert(not isMatch("oxfoxoxfox", "*(of|oof+(o))"))
				assert(not isMatch("xfoooofof", "*(of|oof+(o))"))
				assert(not isMatch("ffffffo", "*(oxf+(ox))"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(oxf+(ox))"))
				assert(not isMatch("ffo", "*(oxf+(ox))"))
				assert(not isMatch("fofo", "*(oxf+(ox))"))
				assert(not isMatch("fofoofoofofoo", "*(oxf+(ox))"))
				assert(not isMatch("foo", "*(oxf+(ox))"))
				assert(not isMatch("foob", "*(oxf+(ox))"))
				assert(not isMatch("foobb", "*(oxf+(ox))"))
				assert(not isMatch("foofoofo", "*(oxf+(ox))"))
				assert(not isMatch("fooofoofofooo", "*(oxf+(ox))"))
				assert(not isMatch("foooofo", "*(oxf+(ox))"))
				assert(not isMatch("foooofof", "*(oxf+(ox))"))
				assert(not isMatch("foooofofx", "*(oxf+(ox))"))
				assert(not isMatch("foooxfooxfoxfooox", "*(oxf+(ox))"))
				assert(not isMatch("foooxfooxfxfooox", "*(oxf+(ox))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(oxf+(ox))"))
				assert(not isMatch("foot", "*(oxf+(ox))"))
				assert(not isMatch("foox", "*(oxf+(ox))"))
				assert(not isMatch("ofoofo", "*(oxf+(ox))"))
				assert(not isMatch("ofooofoofofooo", "*(oxf+(ox))"))
				assert(not isMatch("ofoooxoofxo", "*(oxf+(ox))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(oxf+(ox))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(oxf+(ox))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(oxf+(ox))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(oxf+(ox))"))
				assert(not isMatch("ofxoofxo", "*(oxf+(ox))"))
				assert(not isMatch("oofooofo", "*(oxf+(ox))"))
				assert(not isMatch("ooo", "*(oxf+(ox))"))
				assert(not isMatch("oxfoxfox", "*(oxf+(ox))"))
				assert(isMatch("oxfoxoxfox", "*(oxf+(ox))"))
				assert(not isMatch("xfoooofof", "*(oxf+(ox))"))
				assert(isMatch("ffffffo", "@(!(z*)|*x)"))
				assert(isMatch("fffooofoooooffoofffooofff", "@(!(z*)|*x)"))
				assert(isMatch("ffo", "@(!(z*)|*x)"))
				assert(isMatch("fofo", "@(!(z*)|*x)"))
				assert(isMatch("fofoofoofofoo", "@(!(z*)|*x)"))
				assert(isMatch("foo", "@(!(z*)|*x)"))
				assert(isMatch("foob", "@(!(z*)|*x)"))
				assert(isMatch("foobb", "@(!(z*)|*x)"))
				assert(isMatch("foofoofo", "@(!(z*)|*x)"))
				assert(isMatch("fooofoofofooo", "@(!(z*)|*x)"))
				assert(isMatch("foooofo", "@(!(z*)|*x)"))
				assert(isMatch("foooofof", "@(!(z*)|*x)"))
				assert(isMatch("foooofofx", "@(!(z*)|*x)"))
				assert(isMatch("foooxfooxfoxfooox", "@(!(z*)|*x)"))
				assert(isMatch("foooxfooxfxfooox", "@(!(z*)|*x)"))
				assert(isMatch("foooxfooxofoxfooox", "@(!(z*)|*x)"))
				assert(isMatch("foot", "@(!(z*)|*x)"))
				assert(isMatch("foox", "@(!(z*)|*x)"))
				assert(isMatch("ofoofo", "@(!(z*)|*x)"))
				assert(isMatch("ofooofoofofooo", "@(!(z*)|*x)"))
				assert(isMatch("ofoooxoofxo", "@(!(z*)|*x)"))
				assert(isMatch("ofoooxoofxoofoooxoofxo", "@(!(z*)|*x)"))
				assert(isMatch("ofoooxoofxoofoooxoofxofo", "@(!(z*)|*x)"))
				assert(isMatch("ofoooxoofxoofoooxoofxoo", "@(!(z*)|*x)"))
				assert(isMatch("ofoooxoofxoofoooxoofxooofxofxo", "@(!(z*)|*x)"))
				assert(isMatch("ofxoofxo", "@(!(z*)|*x)"))
				assert(isMatch("oofooofo", "@(!(z*)|*x)"))
				assert(isMatch("ooo", "@(!(z*)|*x)"))
				assert(isMatch("oxfoxfox", "@(!(z*)|*x)"))
				assert(isMatch("oxfoxoxfox", "@(!(z*)|*x)"))
				assert(isMatch("xfoooofof", "@(!(z*)|*x)"))
				assert(not isMatch("ffffffo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("fffooofoooooffoofffooofff", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ffo", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("fofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("fofoofoofofoo", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("foo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foob", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foobb", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("foofoofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("fooofoofofooo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooofof", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooofofx", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooxfooxfoxfooox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooxfooxfxfooox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foot", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("foox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofooofoofofooo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoooxoofxo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ofxoofxo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("oofooofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("ooo", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("oxfoxfox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("oxfoxoxfox", "@(foo|f|fo)*(f|of+(o))"))
				assert(not isMatch("xfoooofof", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("aaac", "*(@(a))a@(c)"))
				assert(isMatch("aac", "*(@(a))a@(c)"))
				assert(isMatch("ac", "*(@(a))a@(c)"))
				assert(not isMatch("abbcd", "*(@(a))a@(c)"))
				assert(not isMatch("abcd", "*(@(a))a@(c)"))
				assert(not isMatch("acd", "*(@(a))a@(c)"))
				assert(not isMatch("baaac", "*(@(a))a@(c)"))
				assert(not isMatch("c", "*(@(a))a@(c)"))
				assert(not isMatch("foo", "*(@(a))a@(c)"))
				assert(not isMatch("aaac", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("aac", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("ac", "@(ab|a*(b))*(c)d"))
				assert(isMatch("abbcd", "@(ab|a*(b))*(c)d"))
				assert(isMatch("abcd", "@(ab|a*(b))*(c)d"))
				assert(isMatch("acd", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("baaac", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("c", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("foo", "@(ab|a*(b))*(c)d"))
				assert(not isMatch("aaac", "?@(a|b)*@(c)d"))
				assert(not isMatch("aac", "?@(a|b)*@(c)d"))
				assert(not isMatch("ac", "?@(a|b)*@(c)d"))
				assert(isMatch("abbcd", "?@(a|b)*@(c)d"))
				assert(isMatch("abcd", "?@(a|b)*@(c)d"))
				assert(not isMatch("acd", "?@(a|b)*@(c)d"))
				assert(not isMatch("baaac", "?@(a|b)*@(c)d"))
				assert(not isMatch("c", "?@(a|b)*@(c)d"))
				assert(not isMatch("foo", "?@(a|b)*@(c)d"))
				assert(not isMatch("aaac", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("aac", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("ac", "@(ab|a*@(b))*(c)d"))
				assert(isMatch("abbcd", "@(ab|a*@(b))*(c)d"))
				assert(isMatch("abcd", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("acd", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("baaac", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("c", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("foo", "@(ab|a*@(b))*(c)d"))
				assert(not isMatch("aac", "*(@(a))b@(c)"))
			end)
		end)

		describe("other", function()
			-- ROBLOX FIXME: hangs test
			itFIXME("should support backtracking in alternation matches", function()
				assert(isMatch("fofoofoofofoo", "*(fo|foo)"))
				assert(not isMatch("ffffffo", "*(fo|foo)"))
				assert(not isMatch("fffooofoooooffoofffooofff", "*(fo|foo)"))
				assert(not isMatch("ffo", "*(fo|foo)"))
				assert(isMatch("fofo", "*(fo|foo)"))
				assert(isMatch("fofoofoofofoo", "*(fo|foo)"))
				assert(isMatch("foo", "*(fo|foo)"))
				assert(not isMatch("foob", "*(fo|foo)"))
				assert(not isMatch("foobb", "*(fo|foo)"))
				assert(isMatch("foofoofo", "*(fo|foo)"))
				assert(not isMatch("fooofoofofooo", "*(fo|foo)"))
				assert(not isMatch("foooofo", "*(fo|foo)"))
				assert(not isMatch("foooofof", "*(fo|foo)"))
				assert(not isMatch("foooofofx", "*(fo|foo)"))
				assert(not isMatch("foooxfooxfoxfooox", "*(fo|foo)"))
				assert(not isMatch("foooxfooxfxfooox", "*(fo|foo)"))
				assert(not isMatch("foooxfooxofoxfooox", "*(fo|foo)"))
				assert(not isMatch("foot", "*(fo|foo)"))
				assert(not isMatch("foox", "*(fo|foo)"))
				assert(not isMatch("ofoofo", "*(fo|foo)"))
				assert(not isMatch("ofooofoofofooo", "*(fo|foo)"))
				assert(not isMatch("ofoooxoofxo", "*(fo|foo)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxo", "*(fo|foo)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(fo|foo)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxoo", "*(fo|foo)"))
				assert(not isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(fo|foo)"))
				assert(not isMatch("ofxoofxo", "*(fo|foo)"))
				assert(not isMatch("oofooofo", "*(fo|foo)"))
				assert(not isMatch("ooo", "*(fo|foo)"))
				assert(not isMatch("oxfoxfox", "*(fo|foo)"))
				assert(not isMatch("oxfoxoxfox", "*(fo|foo)"))
				assert(not isMatch("xfoooofof", "*(fo|foo)"))
			end)

			-- ROBLOX FIXME: hangs test
			itFIXME("should support exclusions", function()
				assert(not isMatch("foob", "!(foo)b*"))
				assert(not isMatch("foobb", "!(foo)b*"))
				assert(not isMatch("foo", "!(foo)b*"))
				assert(isMatch("bar", "!(foo)b*"))
				assert(isMatch("baz", "!(foo)b*"))
				assert(not isMatch("foobar", "!(foo)b*"))
				assert(not isMatch("foo", "*(!(foo))"))
				assert(isMatch("bar", "*(!(foo))"))
				assert(isMatch("baz", "*(!(foo))"))
				assert(isMatch("foobar", "*(!(foo))"))

				-- Bash 4.3 says this should match `foo` and `foobar`, which makes no sense
				assert(not isMatch("foo", "!(foo)*"))
				assert(not isMatch("foobar", "!(foo)*"))
				assert(isMatch("bar", "!(foo)*"))
				assert(isMatch("baz", "!(foo)*"))
				assert(not isMatch("moo.cow", "!(*.*)"))
				assert(isMatch("moo", "!(*.*)"))
				assert(isMatch("cow", "!(*.*)"))
				assert(isMatch("moo.cow", "!(a*).!(b*)"))
				assert(not isMatch("moo.cow", "!(*).!(*)"))
				assert(not isMatch("moo.cow.moo.cow", "!(*.*).!(*.*)"))
				assert(not isMatch("mad.moo.cow", "!(*.*).!(*.*)"))
				assert(not isMatch("moo.cow", "!(*.*)."))
				assert(not isMatch("moo", "!(*.*)."))
				assert(not isMatch("cow", "!(*.*)."))
				assert(not isMatch("moo.cow", ".!(*.*)"))
				assert(not isMatch("moo", ".!(*.*)"))
				assert(not isMatch("cow", ".!(*.*)"))
				assert(not isMatch("mucca.pazza", "mu!(*(c))?.pa!(*(z))?"))
				assert(isMatch("effgz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("efgz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("egz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(not isMatch("egz", "@(b+(c)d|e+(f)g?|?(h)i@(j|k))"))
				assert(isMatch("egzefffgzbcdij", "*(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
			end)

			itFIXME("valid numbers", function()
				assert(isMatch("/dev/udp/129.22.8.102/45", "/dev/@(tcp|udp)/*/*"))
				assert(not isMatch("0", "[1-6]([0-9])"))
				assert(isMatch("12", "[1-6]([0-9])"))
				assert(not isMatch("1", "[1-6]([0-9])"))
				assert(not isMatch("12abc", "[1-6]([0-9])"))
				assert(not isMatch("555", "[1-6]([0-9])"))
				assert(not isMatch("0", "[1-6]*([0-9])"))
				assert(isMatch("12", "[1-6]*([0-9])"))
				assert(isMatch("1", "[1-6]*([0-9])"))
				assert(not isMatch("12abc", "[1-6]*([0-9])"))
				assert(isMatch("555", "[1-6]*([0-9])"))
				assert(not isMatch("0", "[1-5]*([6-9])"))
				assert(not isMatch("12", "[1-5]*([6-9])"))
				assert(isMatch("1", "[1-5]*([6-9])"))
				assert(not isMatch("12abc", "[1-5]*([6-9])"))
				assert(not isMatch("555", "[1-5]*([6-9])"))
				assert(isMatch("0", "0|[1-6]*([0-9])"))
				assert(isMatch("12", "0|[1-6]*([0-9])"))
				assert(isMatch("1", "0|[1-6]*([0-9])"))
				assert(not isMatch("12abc", "0|[1-6]*([0-9])"))
				assert(isMatch("555", "0|[1-6]*([0-9])"))
				assert(isMatch("07", "+([0-7])"))
				assert(isMatch("0377", "+([0-7])"))
				assert(not isMatch("09", "+([0-7])"))
			end)

			itFIXME("check extended globbing in pattern removal", function()
				assert(isMatch("a", "+(a|abc)"))
				assert(isMatch("abc", "+(a|abc)"))
				assert(not isMatch("abcd", "+(a|abc)"))
				assert(not isMatch("abcde", "+(a|abc)"))
				assert(not isMatch("abcedf", "+(a|abc)"))
				assert(isMatch("f", "+(def|f)"))
				assert(isMatch("def", "+(f|def)"))
				assert(not isMatch("cdef", "+(f|def)"))
				assert(not isMatch("bcdef", "+(f|def)"))
				assert(not isMatch("abcedf", "+(f|def)"))
				assert(isMatch("abcd", "*(a|b)cd"))
				assert(not isMatch("a", "*(a|b)cd"))
				assert(not isMatch("ab", "*(a|b)cd"))
				assert(not isMatch("abc", "*(a|b)cd"))
				assert(not isMatch("a", '"*(a|b)cd"'))
				assert(not isMatch("ab", '"*(a|b)cd"'))
				assert(not isMatch("abc", '"*(a|b)cd"'))
				assert(not isMatch("abcde", '"*(a|b)cd"'))
				assert(not isMatch("abcdef", '"*(a|b)cd"'))
			end)

			-- ROBLOX FIXME: hangs test
			itFIXME(
				"More tests derived from a bug report (in bash) concerning extended glob patterns following a *",
				function()
					assert(isMatch("/dev/udp/129.22.8.102/45", "/dev\\/@(tcp|udp)\\/*\\/*"))
					assert(not isMatch("123abc", "(a+|b)*"))
					assert(isMatch("ab", "(a+|b)*"))
					assert(isMatch("abab", "(a+|b)*"))
					assert(isMatch("abcdef", "(a+|b)*"))
					assert(isMatch("accdef", "(a+|b)*"))
					assert(isMatch("abcfefg", "(a+|b)*"))
					assert(isMatch("abef", "(a+|b)*"))
					assert(isMatch("abcfef", "(a+|b)*"))
					assert(isMatch("abd", "(a+|b)*"))
					assert(isMatch("acd", "(a+|b)*"))
					assert(not isMatch("123abc", "(a+|b)+"))
					assert(isMatch("ab", "(a+|b)+"))
					assert(isMatch("abab", "(a+|b)+"))
					assert(not isMatch("abcdef", "(a+|b)+"))
					assert(not isMatch("accdef", "(a+|b)+"))
					assert(not isMatch("abcfefg", "(a+|b)+"))
					assert(not isMatch("abef", "(a+|b)+"))
					assert(not isMatch("abcfef", "(a+|b)+"))
					assert(not isMatch("abd", "(a+|b)+"))
					assert(not isMatch("acd", "(a+|b)+"))
					assert(not isMatch("123abc", "a(b*(foo|bar))d"))
					assert(not isMatch("ab", "a(b*(foo|bar))d"))
					assert(not isMatch("abab", "a(b*(foo|bar))d"))
					assert(not isMatch("abcdef", "a(b*(foo|bar))d"))
					assert(not isMatch("accdef", "a(b*(foo|bar))d"))
					assert(not isMatch("abcfefg", "a(b*(foo|bar))d"))
					assert(not isMatch("abef", "a(b*(foo|bar))d"))
					assert(not isMatch("abcfef", "a(b*(foo|bar))d"))
					assert(isMatch("abd", "a(b*(foo|bar))d"))
					assert(not isMatch("acd", "a(b*(foo|bar))d"))
					assert(not isMatch("123abc", "ab*(e|f)"))
					assert(isMatch("ab", "ab*(e|f)"))
					assert(not isMatch("abab", "ab*(e|f)"))
					assert(not isMatch("abcdef", "ab*(e|f)"))
					assert(not isMatch("accdef", "ab*(e|f)"))
					assert(not isMatch("abcfefg", "ab*(e|f)"))
					assert(isMatch("abef", "ab*(e|f)"))
					assert(not isMatch("abcfef", "ab*(e|f)"))
					assert(not isMatch("abd", "ab*(e|f)"))
					assert(not isMatch("acd", "ab*(e|f)"))
					assert(not isMatch("123abc", "ab**(e|f)"))
					assert(isMatch("ab", "ab**(e|f)"))
					assert(isMatch("abab", "ab**(e|f)"))
					assert(isMatch("abcdef", "ab**(e|f)"))
					assert(not isMatch("accdef", "ab**(e|f)"))
					assert(isMatch("abcfefg", "ab**(e|f)"))
					assert(isMatch("abef", "ab**(e|f)"))
					assert(isMatch("abcfef", "ab**(e|f)"))
					assert(isMatch("abd", "ab**(e|f)"))
					assert(not isMatch("acd", "ab**(e|f)"))
					assert(not isMatch("123abc", "ab**(e|f)g"))
					assert(not isMatch("ab", "ab**(e|f)g"))
					assert(not isMatch("abab", "ab**(e|f)g"))
					assert(not isMatch("abcdef", "ab**(e|f)g"))
					assert(not isMatch("accdef", "ab**(e|f)g"))
					assert(isMatch("abcfefg", "ab**(e|f)g"))
					assert(not isMatch("abef", "ab**(e|f)g"))
					assert(not isMatch("abcfef", "ab**(e|f)g"))
					assert(not isMatch("abd", "ab**(e|f)g"))
					assert(not isMatch("acd", "ab**(e|f)g"))
					assert(not isMatch("123abc", "ab***ef"))
					assert(not isMatch("ab", "ab***ef"))
					assert(not isMatch("abab", "ab***ef"))
					assert(isMatch("abcdef", "ab***ef"))
					assert(not isMatch("accdef", "ab***ef"))
					assert(not isMatch("abcfefg", "ab***ef"))
					assert(isMatch("abef", "ab***ef"))
					assert(isMatch("abcfef", "ab***ef"))
					assert(not isMatch("abd", "ab***ef"))
					assert(not isMatch("acd", "ab***ef"))
					assert(not isMatch("123abc", "ab*+(e|f)"))
					assert(not isMatch("ab", "ab*+(e|f)"))
					assert(not isMatch("abab", "ab*+(e|f)"))
					assert(isMatch("abcdef", "ab*+(e|f)"))
					assert(not isMatch("accdef", "ab*+(e|f)"))
					assert(not isMatch("abcfefg", "ab*+(e|f)"))
					assert(isMatch("abef", "ab*+(e|f)"))
					assert(isMatch("abcfef", "ab*+(e|f)"))
					assert(not isMatch("abd", "ab*+(e|f)"))
					assert(not isMatch("acd", "ab*+(e|f)"))
					assert(not isMatch("123abc", "ab*d*(e|f)"))
					assert(not isMatch("ab", "ab*d*(e|f)"))
					assert(not isMatch("abab", "ab*d*(e|f)"))
					assert(isMatch("abcdef", "ab*d*(e|f)"))
					assert(not isMatch("accdef", "ab*d*(e|f)"))
					assert(not isMatch("abcfefg", "ab*d*(e|f)"))
					assert(not isMatch("abef", "ab*d*(e|f)"))
					assert(not isMatch("abcfef", "ab*d*(e|f)"))
					assert(isMatch("abd", "ab*d*(e|f)"))
					assert(not isMatch("acd", "ab*d*(e|f)"))
					assert(not isMatch("123abc", "ab*d+(e|f)"))
					assert(not isMatch("ab", "ab*d+(e|f)"))
					assert(not isMatch("abab", "ab*d+(e|f)"))
					assert(isMatch("abcdef", "ab*d+(e|f)"))
					assert(not isMatch("accdef", "ab*d+(e|f)"))
					assert(not isMatch("abcfefg", "ab*d+(e|f)"))
					assert(not isMatch("abef", "ab*d+(e|f)"))
					assert(not isMatch("abcfef", "ab*d+(e|f)"))
					assert(not isMatch("abd", "ab*d+(e|f)"))
					assert(not isMatch("acd", "ab*d+(e|f)"))
					assert(not isMatch("123abc", "ab?*(e|f)"))
					assert(not isMatch("ab", "ab?*(e|f)"))
					assert(not isMatch("abab", "ab?*(e|f)"))
					assert(not isMatch("abcdef", "ab?*(e|f)"))
					assert(not isMatch("accdef", "ab?*(e|f)"))
					assert(not isMatch("abcfefg", "ab?*(e|f)"))
					assert(isMatch("abef", "ab?*(e|f)"))
					assert(isMatch("abcfef", "ab?*(e|f)"))
					assert(isMatch("abd", "ab?*(e|f)"))
					assert(not isMatch("acd", "ab?*(e|f)"))
				end
			)

			-- ROBLOX FIXME: hangs test
			itFIXME("bug in all versions up to and including bash-2.05b", function()
				assert(isMatch("123abc", "*?(a)bc"))
			end)

			-- ROBLOX FIXME: hangs test
			itFIXME("should work with character classes", function()
				local opts = { posix = true }
				assert(isMatch("a.b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a,b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a:b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a-b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a;b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a_b", "a[^[:alnum:]]b", opts))
				assert(isMatch("a.b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a,b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a:b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a-b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a;b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a_b", "a[-.,:\\;\\ _]b"))
				assert(isMatch("a.b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a,b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a:b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a-b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a;b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a_b", "a@([^[:alnum:]])b", opts))
				assert(isMatch("a.b", "a@([-.,:; _])b"))
				assert(isMatch("a,b", "a@([-.,:; _])b"))
				assert(isMatch("a:b", "a@([-.,:; _])b"))
				assert(isMatch("a-b", "a@([-.,:; _])b"))
				assert(isMatch("a;b", "a@([-.,:; _])b"))
				assert(isMatch("a b", "a@([-.,:; _])b"))
				assert(isMatch("a_b", "a@([-.,:; _])b"))
				assert(isMatch("a.b", "a@([.])b"))
				assert(not isMatch("a,b", "a@([.])b"))
				assert(not isMatch("a:b", "a@([.])b"))
				assert(not isMatch("a-b", "a@([.])b"))
				assert(not isMatch("a;b", "a@([.])b"))
				assert(not isMatch("a b", "a@([.])b"))
				assert(not isMatch("a_b", "a@([.])b"))
				assert(not isMatch("a.b", "a@([^.])b"))
				assert(isMatch("a,b", "a@([^.])b"))
				assert(isMatch("a:b", "a@([^.])b"))
				assert(isMatch("a-b", "a@([^.])b"))
				assert(isMatch("a;b", "a@([^.])b"))
				assert(isMatch("a b", "a@([^.])b"))
				assert(isMatch("a_b", "a@([^.])b"))
				assert(isMatch("a.b", "a@([^x])b"))
				assert(isMatch("a,b", "a@([^x])b"))
				assert(isMatch("a:b", "a@([^x])b"))
				assert(isMatch("a-b", "a@([^x])b"))
				assert(isMatch("a;b", "a@([^x])b"))
				assert(isMatch("a b", "a@([^x])b"))
				assert(isMatch("a_b", "a@([^x])b"))
				assert(isMatch("a.b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a,b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a:b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a-b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a;b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a_b", "a+([^[:alnum:]])b", opts))
				assert(isMatch("a.b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a,b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a:b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a-b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a;b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a b", "a@(.|[^[:alnum:]])b", opts))
				assert(isMatch("a_b", "a@(.|[^[:alnum:]])b", opts))
			end)

			itFIXME("should support POSIX character classes in extglobs", function()
				local opts = { posix = true }
				assert(isMatch("a.c", "+([[:alpha:].])", opts))
				assert(isMatch("a.c", "+([[:alpha:].])+([[:alpha:].])", opts))
				assert(isMatch("a.c", "*([[:alpha:].])", opts))
				assert(isMatch("a.c", "*([[:alpha:].])*([[:alpha:].])", opts))
				assert(isMatch("a.c", "?([[:alpha:].])?([[:alpha:].])?([[:alpha:].])", opts))
				assert(isMatch("a.c", "@([[:alpha:].])@([[:alpha:].])@([[:alpha:].])", opts))
				assert(not isMatch(".", "!(\\.)", opts))
				assert(not isMatch(".", "!([[:alpha:].])", opts))
				assert(isMatch(".", "?([[:alpha:].])", opts))
				assert(isMatch(".", "@([[:alpha:].])", opts))
			end)

			-- ported from http://www.bashcookbook.com/bashinfo/source/bash-4.3/tests/extglob2.tests
			-- ROBLOX FIXME: hangs test
			itFIXME("should pass extglob2 tests", function()
				assert(not isMatch("baaac", "*(@(a))a@(c)"))
				assert(not isMatch("c", "*(@(a))a@(c)"))
				assert(not isMatch("egz", "@(b+(c)d|e+(f)g?|?(h)i@(j|k))"))
				assert(not isMatch("foooofof", "*(f+(o))"))
				assert(not isMatch("foooofofx", "*(f*(o))"))
				assert(not isMatch("foooxfooxofoxfooox", "*(f*(o)x)"))
				assert(not isMatch("ofooofoofofooo", "*(f*(o))"))
				assert(not isMatch("ofoooxoofxoofoooxoofxofo", "*(*(of*(o)x)o)"))
				assert(not isMatch("oxfoxfox", "*(oxf+(ox))"))
				assert(not isMatch("xfoooofof", "*(f*(o))"))
				assert(isMatch("aaac", "*(@(a))a@(c)"))
				assert(isMatch("aac", "*(@(a))a@(c)"))
				assert(isMatch("abbcd", "@(ab|a*(b))*(c)d"))
				assert(isMatch("abcd", "?@(a|b)*@(c)d"))
				assert(isMatch("abcd", "@(ab|a*@(b))*(c)d"))
				assert(isMatch("ac", "*(@(a))a@(c)"))
				assert(isMatch("acd", "@(ab|a*(b))*(c)d"))
				assert(isMatch("effgz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("efgz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("egz", "@(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("egzefffgzbcdij", "*(b+(c)d|e*(f)g?|?(h)i@(j|k))"))
				assert(isMatch("fffooofoooooffoofffooofff", "*(*(f)*(o))"))
				assert(isMatch("ffo", "*(f*(o))"))
				assert(isMatch("fofo", "*(f*(o))"))
				assert(isMatch("foofoofo", "@(foo|f|fo)*(f|of+(o))"))
				assert(isMatch("fooofoofofooo", "*(f*(o))"))
				assert(isMatch("foooofo", "*(f*(o))"))
				assert(isMatch("foooofof", "*(f*(o))"))
				assert(isMatch("foooxfooxfoxfooox", "*(f*(o)x)"))
				assert(isMatch("foooxfooxfxfooox", "*(f*(o)x)"))
				assert(isMatch("ofoofo", "*(of+(o))"))
				assert(isMatch("ofoofo", "*(of+(o)|f)"))
				assert(isMatch("ofoooxoofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxoo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofoooxoofxoofoooxoofxooofxofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("ofxoofxo", "*(*(of*(o)x)o)"))
				assert(isMatch("oofooofo", "*(of|oof+(o))"))
				assert(isMatch("oxfoxoxfox", "*(oxf+(ox))"))
			end)

			-- ROBLOX FIXME: hangs test
			itFIXME("should support exclusions_", function()
				assert(not isMatch("f", "!(f)"))
				assert(not isMatch("f", "*(!(f))"))
				assert(not isMatch("f", "+(!(f))"))
				assert(not isMatch("foo", "!(foo)"))
				assert(not isMatch("foob", "!(foo)b*"))
				assert(not isMatch("mad.moo.cow", "!(*.*).!(*.*)"))
				assert(not isMatch("mucca.pazza", "mu!(*(c))?.pa!(*(z))?"))
				assert(not isMatch("zoot", "@(!(z*)|*x)"))
				assert(isMatch("fff", "!(f)"))
				assert(isMatch("fff", "*(!(f))"))
				assert(isMatch("fff", "+(!(f))"))
				assert(isMatch("foo", "!(f)"))
				assert(isMatch("foo", "!(x)"))
				assert(isMatch("foo", "!(x)*"))
				assert(isMatch("foo", "*(!(f))"))
				assert(isMatch("foo", "+(!(f))"))
				assert(isMatch("foobar", "!(foo)"))
				assert(isMatch("foot", "@(!(z*)|*x)"))
				assert(isMatch("foox", "@(!(z*)|*x)"))
				assert(isMatch("ooo", "!(f)"))
				assert(isMatch("ooo", "*(!(f))"))
				assert(isMatch("ooo", "+(!(f))"))
				assert(isMatch("zoox", "@(!(z*)|*x)"))
			end)
		end)
	end)
end
